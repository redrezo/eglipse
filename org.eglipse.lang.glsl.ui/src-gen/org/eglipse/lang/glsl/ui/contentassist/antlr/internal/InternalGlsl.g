/*
* generated by Xtext
*/
grammar InternalGlsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.eglipse.lang.glsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eglipse.lang.glsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eglipse.lang.glsl.services.GlslGrammarAccess;

}

@parser::members {
 
 	private GlslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GlslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSourceFile
entryRuleSourceFile 
:
{ before(grammarAccess.getSourceFileRule()); }
	 ruleSourceFile
{ after(grammarAccess.getSourceFileRule()); } 
	 EOF 
;

// Rule SourceFile
ruleSourceFile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSourceFileAccess().getGroup()); }
(rule__SourceFile__Group__0)
{ after(grammarAccess.getSourceFileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrecompilerStatement
entryRulePrecompilerStatement 
:
{ before(grammarAccess.getPrecompilerStatementRule()); }
	 rulePrecompilerStatement
{ after(grammarAccess.getPrecompilerStatementRule()); } 
	 EOF 
;

// Rule PrecompilerStatement
rulePrecompilerStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrecompilerStatementAccess().getPrecompilerVersionParserRuleCall()); }
	rulePrecompilerVersion
{ after(grammarAccess.getPrecompilerStatementAccess().getPrecompilerVersionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrecompilerVersion
entryRulePrecompilerVersion 
:
{ before(grammarAccess.getPrecompilerVersionRule()); }
	 rulePrecompilerVersion
{ after(grammarAccess.getPrecompilerVersionRule()); } 
	 EOF 
;

// Rule PrecompilerVersion
rulePrecompilerVersion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrecompilerVersionAccess().getGroup()); }
(rule__PrecompilerVersion__Group__0)
{ after(grammarAccess.getPrecompilerVersionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
(rule__Declaration__Alternatives)
{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleUniformDeclaration
entryRuleUniformDeclaration 
:
{ before(grammarAccess.getUniformDeclarationRule()); }
	 ruleUniformDeclaration
{ after(grammarAccess.getUniformDeclarationRule()); } 
	 EOF 
;

// Rule UniformDeclaration
ruleUniformDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUniformDeclarationAccess().getGroup()); }
(rule__UniformDeclaration__Group__0)
{ after(grammarAccess.getUniformDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeDeclaration
entryRuleAttributeDeclaration 
:
{ before(grammarAccess.getAttributeDeclarationRule()); }
	 ruleAttributeDeclaration
{ after(grammarAccess.getAttributeDeclarationRule()); } 
	 EOF 
;

// Rule AttributeDeclaration
ruleAttributeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getAlternatives()); }
(rule__AttributeDeclaration__Alternatives)
{ after(grammarAccess.getAttributeDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionPrototype
entryRuleFunctionPrototype 
:
{ before(grammarAccess.getFunctionPrototypeRule()); }
	 ruleFunctionPrototype
{ after(grammarAccess.getFunctionPrototypeRule()); } 
	 EOF 
;

// Rule FunctionPrototype
ruleFunctionPrototype
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getGroup()); }
(rule__FunctionPrototype__Group__0)
{ after(grammarAccess.getFunctionPrototypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScalarType
entryRuleScalarType 
:
{ before(grammarAccess.getScalarTypeRule()); }
	 ruleScalarType
{ after(grammarAccess.getScalarTypeRule()); } 
	 EOF 
;

// Rule ScalarType
ruleScalarType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScalarTypeAccess().getAlternatives()); }
(rule__ScalarType__Alternatives)
{ after(grammarAccess.getScalarTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComplexType
entryRuleComplexType 
:
{ before(grammarAccess.getComplexTypeRule()); }
	 ruleComplexType
{ after(grammarAccess.getComplexTypeRule()); } 
	 EOF 
;

// Rule ComplexType
ruleComplexType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComplexTypeAccess().getAlternatives()); }
(rule__ComplexType__Alternatives)
{ after(grammarAccess.getComplexTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVecType
entryRuleVecType 
:
{ before(grammarAccess.getVecTypeRule()); }
	 ruleVecType
{ after(grammarAccess.getVecTypeRule()); } 
	 EOF 
;

// Rule VecType
ruleVecType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVecTypeAccess().getAlternatives()); }
(rule__VecType__Alternatives)
{ after(grammarAccess.getVecTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMatType
entryRuleMatType 
:
{ before(grammarAccess.getMatTypeRule()); }
	 ruleMatType
{ after(grammarAccess.getMatTypeRule()); } 
	 EOF 
;

// Rule MatType
ruleMatType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMatTypeAccess().getAlternatives()); }
(rule__MatType__Alternatives)
{ after(grammarAccess.getMatTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition 
:
{ before(grammarAccess.getFunctionDefinitionRule()); }
	 ruleFunctionDefinition
{ after(grammarAccess.getFunctionDefinitionRule()); } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
(rule__FunctionDefinition__Group__0)
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchCase
entryRuleSwitchCase 
:
{ before(grammarAccess.getSwitchCaseRule()); }
	 ruleSwitchCase
{ after(grammarAccess.getSwitchCaseRule()); } 
	 EOF 
;

// Rule SwitchCase
ruleSwitchCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchCaseAccess().getAlternatives()); }
(rule__SwitchCase__Alternatives)
{ after(grammarAccess.getSwitchCaseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlockStatement
entryRuleBlockStatement 
:
{ before(grammarAccess.getBlockStatementRule()); }
	 ruleBlockStatement
{ after(grammarAccess.getBlockStatementRule()); } 
	 EOF 
;

// Rule BlockStatement
ruleBlockStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockStatementAccess().getGroup()); }
(rule__BlockStatement__Group__0)
{ after(grammarAccess.getBlockStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJumpStatement
entryRuleJumpStatement 
:
{ before(grammarAccess.getJumpStatementRule()); }
	 ruleJumpStatement
{ after(grammarAccess.getJumpStatementRule()); } 
	 EOF 
;

// Rule JumpStatement
ruleJumpStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJumpStatementAccess().getAlternatives()); }
(rule__JumpStatement__Alternatives)
{ after(grammarAccess.getJumpStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentStatement
entryRuleAssignmentStatement 
:
{ before(grammarAccess.getAssignmentStatementRule()); }
	 ruleAssignmentStatement
{ after(grammarAccess.getAssignmentStatementRule()); } 
	 EOF 
;

// Rule AssignmentStatement
ruleAssignmentStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentStatementAccess().getGroup()); }
(rule__AssignmentStatement__Group__0)
{ after(grammarAccess.getAssignmentStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExp
entryRuleExp 
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpAccess().getGroup()); }
(rule__Exp__Group__0)
{ after(grammarAccess.getExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicExp
entryRuleLogicExp 
:
{ before(grammarAccess.getLogicExpRule()); }
	 ruleLogicExp
{ after(grammarAccess.getLogicExpRule()); } 
	 EOF 
;

// Rule LogicExp
ruleLogicExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicExpAccess().getGroup()); }
(rule__LogicExp__Group__0)
{ after(grammarAccess.getLogicExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddExp
entryRuleAddExp 
:
{ before(grammarAccess.getAddExpRule()); }
	 ruleAddExp
{ after(grammarAccess.getAddExpRule()); } 
	 EOF 
;

// Rule AddExp
ruleAddExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddExpAccess().getGroup()); }
(rule__AddExp__Group__0)
{ after(grammarAccess.getAddExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddOp
entryRuleAddOp 
:
{ before(grammarAccess.getAddOpRule()); }
	 ruleAddOp
{ after(grammarAccess.getAddOpRule()); } 
	 EOF 
;

// Rule AddOp
ruleAddOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddOpAccess().getAlternatives()); }
(rule__AddOp__Alternatives)
{ after(grammarAccess.getAddOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMulExp
entryRuleMulExp 
:
{ before(grammarAccess.getMulExpRule()); }
	 ruleMulExp
{ after(grammarAccess.getMulExpRule()); } 
	 EOF 
;

// Rule MulExp
ruleMulExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMulExpAccess().getGroup()); }
(rule__MulExp__Group__0)
{ after(grammarAccess.getMulExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMulOp
entryRuleMulOp 
:
{ before(grammarAccess.getMulOpRule()); }
	 ruleMulOp
{ after(grammarAccess.getMulOpRule()); } 
	 EOF 
;

// Rule MulOp
ruleMulOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMulOpAccess().getAlternatives()); }
(rule__MulOp__Alternatives)
{ after(grammarAccess.getMulOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostfixExp
entryRulePostfixExp 
:
{ before(grammarAccess.getPostfixExpRule()); }
	 rulePostfixExp
{ after(grammarAccess.getPostfixExpRule()); } 
	 EOF 
;

// Rule PostfixExp
rulePostfixExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostfixExpAccess().getAlternatives()); }
(rule__PostfixExp__Alternatives)
{ after(grammarAccess.getPostfixExpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomic
entryRuleAtomic 
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
(rule__Atomic__Alternatives)
{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionAccess().getGroup()); }
(rule__Definition__Group__0)
{ after(grammarAccess.getDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaredParameter
entryRuleDeclaredParameter 
:
{ before(grammarAccess.getDeclaredParameterRule()); }
	 ruleDeclaredParameter
{ after(grammarAccess.getDeclaredParameterRule()); } 
	 EOF 
;

// Rule DeclaredParameter
ruleDeclaredParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclaredParameterAccess().getNameAssignment()); }
(rule__DeclaredParameter__NameAssignment)
{ after(grammarAccess.getDeclaredParameterAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}






// Rule LogicOp
ruleLogicOp
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOpAccess().getAlternatives()); }
(rule__LogicOp__Alternatives)
{ after(grammarAccess.getLogicOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SourceFile__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getGroup_1_0()); }
(rule__SourceFile__Group_1_0__0)
{ after(grammarAccess.getSourceFileAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getSourceFileAccess().getGroup_1_1()); }
(rule__SourceFile__Group_1_1__0)
{ after(grammarAccess.getSourceFileAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getSourceFileAccess().getGroup_1_2()); }
(rule__SourceFile__Group_1_2__0)
{ after(grammarAccess.getSourceFileAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getSourceFileAccess().getFunctionsAssignment_1_3()); }
(rule__SourceFile__FunctionsAssignment_1_3)
{ after(grammarAccess.getSourceFileAccess().getFunctionsAssignment_1_3()); }
)

    |(
{ before(grammarAccess.getSourceFileAccess().getGroup_1_4()); }
(rule__SourceFile__Group_1_4__0)
{ after(grammarAccess.getSourceFileAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getGroup_0()); }
(rule__Declaration__Group_0__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_1()); }
(rule__Declaration__Group_1__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_2()); }
(rule__Declaration__Group_2__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getVariableDeclarationParserRuleCall_3()); }
	ruleVariableDeclaration
{ after(grammarAccess.getDeclarationAccess().getVariableDeclarationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getFunctionDefinitionParserRuleCall_4()); }
	ruleFunctionDefinition
{ after(grammarAccess.getDeclarationAccess().getFunctionDefinitionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getGroup_0()); }
(rule__AttributeDeclaration__Group_0__0)
{ after(grammarAccess.getAttributeDeclarationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAttributeDeclarationAccess().getGroup_1()); }
(rule__AttributeDeclaration__Group_1__0)
{ after(grammarAccess.getAttributeDeclarationAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAttributeDeclarationAccess().getGroup_2()); }
(rule__AttributeDeclaration__Group_2__0)
{ after(grammarAccess.getAttributeDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionPrototype__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getVOIDTerminalRuleCall_3_0()); }
(	RULE_VOID)?
{ after(grammarAccess.getFunctionPrototypeAccess().getVOIDTerminalRuleCall_3_0()); }
)

    |(
{ before(grammarAccess.getFunctionPrototypeAccess().getGroup_3_1()); }
(rule__FunctionPrototype__Group_3_1__0)
{ after(grammarAccess.getFunctionPrototypeAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getScalarTypeParserRuleCall_0()); }
	ruleScalarType
{ after(grammarAccess.getTypeAccess().getScalarTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getComplexTypeParserRuleCall_1()); }
	ruleComplexType
{ after(grammarAccess.getTypeAccess().getComplexTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_2()); }
(rule__Type__Group_2__0)
{ after(grammarAccess.getTypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getGroup_0()); }
(rule__ScalarType__Group_0__0)
{ after(grammarAccess.getScalarTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getGroup_1()); }
(rule__ScalarType__Group_1__0)
{ after(grammarAccess.getScalarTypeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getGroup_2()); }
(rule__ScalarType__Group_2__0)
{ after(grammarAccess.getScalarTypeAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getGroup_3()); }
(rule__ScalarType__Group_3__0)
{ after(grammarAccess.getScalarTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeAccess().getVecTypeParserRuleCall_0()); }
	ruleVecType
{ after(grammarAccess.getComplexTypeAccess().getVecTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getComplexTypeAccess().getMatTypeParserRuleCall_1()); }
	ruleMatType
{ after(grammarAccess.getComplexTypeAccess().getMatTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getGroup_0()); }
(rule__VecType__Group_0__0)
{ after(grammarAccess.getVecTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getVecTypeAccess().getGroup_1()); }
(rule__VecType__Group_1__0)
{ after(grammarAccess.getVecTypeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getVecTypeAccess().getGroup_2()); }
(rule__VecType__Group_2__0)
{ after(grammarAccess.getVecTypeAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getVecTypeAccess().getGroup_3()); }
(rule__VecType__Group_3__0)
{ after(grammarAccess.getVecTypeAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getVecTypeAccess().getGroup_4()); }
(rule__VecType__Group_4__0)
{ after(grammarAccess.getVecTypeAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getVecTypeAccess().getGroup_5()); }
(rule__VecType__Group_5__0)
{ after(grammarAccess.getVecTypeAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getVecTypeAccess().getGroup_6()); }
(rule__VecType__Group_6__0)
{ after(grammarAccess.getVecTypeAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getVecTypeAccess().getGroup_7()); }
(rule__VecType__Group_7__0)
{ after(grammarAccess.getVecTypeAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getVecTypeAccess().getGroup_8()); }
(rule__VecType__Group_8__0)
{ after(grammarAccess.getVecTypeAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getVecTypeAccess().getGroup_9()); }
(rule__VecType__Group_9__0)
{ after(grammarAccess.getVecTypeAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getVecTypeAccess().getGroup_10()); }
(rule__VecType__Group_10__0)
{ after(grammarAccess.getVecTypeAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getVecTypeAccess().getGroup_11()); }
(rule__VecType__Group_11__0)
{ after(grammarAccess.getVecTypeAccess().getGroup_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getGroup_0()); }
(rule__MatType__Group_0__0)
{ after(grammarAccess.getMatTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getMatTypeAccess().getGroup_1()); }
(rule__MatType__Group_1__0)
{ after(grammarAccess.getMatTypeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getMatTypeAccess().getGroup_2()); }
(rule__MatType__Group_2__0)
{ after(grammarAccess.getMatTypeAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getMatTypeAccess().getGroup_3()); }
(rule__MatType__Group_3__0)
{ after(grammarAccess.getMatTypeAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getMatTypeAccess().getGroup_4()); }
(rule__MatType__Group_4__0)
{ after(grammarAccess.getMatTypeAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getMatTypeAccess().getGroup_5()); }
(rule__MatType__Group_5__0)
{ after(grammarAccess.getMatTypeAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getMatTypeAccess().getGroup_6()); }
(rule__MatType__Group_6__0)
{ after(grammarAccess.getMatTypeAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getMatTypeAccess().getGroup_7()); }
(rule__MatType__Group_7__0)
{ after(grammarAccess.getMatTypeAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getMatTypeAccess().getGroup_8()); }
(rule__MatType__Group_8__0)
{ after(grammarAccess.getMatTypeAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getMatTypeAccess().getGroup_9()); }
(rule__MatType__Group_9__0)
{ after(grammarAccess.getMatTypeAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getMatTypeAccess().getGroup_10()); }
(rule__MatType__Group_10__0)
{ after(grammarAccess.getMatTypeAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getMatTypeAccess().getGroup_11()); }
(rule__MatType__Group_11__0)
{ after(grammarAccess.getMatTypeAccess().getGroup_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getBlockStatementParserRuleCall_0()); }
	ruleBlockStatement
{ after(grammarAccess.getStatementAccess().getBlockStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getVariableDeclarationParserRuleCall_1()); }
	ruleVariableDeclaration
{ after(grammarAccess.getStatementAccess().getVariableDeclarationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getAssignmentStatementParserRuleCall_2()); }
	ruleAssignmentStatement
{ after(grammarAccess.getStatementAccess().getAssignmentStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getJumpStatementParserRuleCall_3()); }
	ruleJumpStatement
{ after(grammarAccess.getStatementAccess().getJumpStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_4()); }
(rule__Statement__Group_4__0)
{ after(grammarAccess.getStatementAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_5()); }
(rule__Statement__Group_5__0)
{ after(grammarAccess.getStatementAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_6()); }
(rule__Statement__Group_6__0)
{ after(grammarAccess.getStatementAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_7()); }
(rule__Statement__Group_7__0)
{ after(grammarAccess.getStatementAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_8()); }
(rule__Statement__Group_8__0)
{ after(grammarAccess.getStatementAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_9()); }
(rule__Statement__Group_9__0)
{ after(grammarAccess.getStatementAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__AAlternatives_8_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAExpParserRuleCall_8_3_0_0()); }
	ruleExp
{ after(grammarAccess.getStatementAccess().getAExpParserRuleCall_8_3_0_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getADeclarationParserRuleCall_8_3_0_1()); }
	ruleDeclaration
{ after(grammarAccess.getStatementAccess().getADeclarationParserRuleCall_8_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getGroup_0()); }
(rule__SwitchCase__Group_0__0)
{ after(grammarAccess.getSwitchCaseAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSwitchCaseAccess().getGroup_1()); }
(rule__SwitchCase__Group_1__0)
{ after(grammarAccess.getSwitchCaseAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getCaseAssignment_0_1_0()); }
(rule__SwitchCase__CaseAssignment_0_1_0)
{ after(grammarAccess.getSwitchCaseAccess().getCaseAssignment_0_1_0()); }
)

    |(
{ before(grammarAccess.getSwitchCaseAccess().getCaseAssignment_0_1_1()); }
(rule__SwitchCase__CaseAssignment_0_1_1)
{ after(grammarAccess.getSwitchCaseAccess().getCaseAssignment_0_1_1()); }
)

    |(
{ before(grammarAccess.getSwitchCaseAccess().getFcaseAssignment_0_1_2()); }
(rule__SwitchCase__FcaseAssignment_0_1_2)
{ after(grammarAccess.getSwitchCaseAccess().getFcaseAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getGroup_0()); }
(rule__JumpStatement__Group_0__0)
{ after(grammarAccess.getJumpStatementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getJumpStatementAccess().getGroup_1()); }
(rule__JumpStatement__Group_1__0)
{ after(grammarAccess.getJumpStatementAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getJumpStatementAccess().getGroup_2()); }
(rule__JumpStatement__Group_2__0)
{ after(grammarAccess.getJumpStatementAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getJumpStatementAccess().getGroup_3()); }
(rule__JumpStatement__Group_3__0)
{ after(grammarAccess.getJumpStatementAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getJumpStatementAccess().getGroup_4()); }
(rule__JumpStatement__Group_4__0)
{ after(grammarAccess.getJumpStatementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddOpAccess().getPLUSTerminalRuleCall_0()); }
	RULE_PLUS
{ after(grammarAccess.getAddOpAccess().getPLUSTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAddOpAccess().getDASHTerminalRuleCall_1()); }
	RULE_DASH
{ after(grammarAccess.getAddOpAccess().getDASHTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MulOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulOpAccess().getSTARTerminalRuleCall_0()); }
	RULE_STAR
{ after(grammarAccess.getMulOpAccess().getSTARTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMulOpAccess().getSLASHTerminalRuleCall_1()); }
	RULE_SLASH
{ after(grammarAccess.getMulOpAccess().getSLASHTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getMulOpAccess().getPERCENTTerminalRuleCall_2()); }
	RULE_PERCENT
{ after(grammarAccess.getMulOpAccess().getPERCENTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getGroup_0()); }
(rule__PostfixExp__Group_0__0)
{ after(grammarAccess.getPostfixExpAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPostfixExpAccess().getAtomicParserRuleCall_1()); }
	ruleAtomic
{ after(grammarAccess.getPostfixExpAccess().getAtomicParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Alternatives_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getGroup_0_2_0()); }
(rule__PostfixExp__Group_0_2_0__0)
{ after(grammarAccess.getPostfixExpAccess().getGroup_0_2_0()); }
)

    |(
{ before(grammarAccess.getPostfixExpAccess().getGroup_0_2_1()); }
(rule__PostfixExp__Group_0_2_1__0)
{ after(grammarAccess.getPostfixExpAccess().getGroup_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__MemberAlternatives_0_2_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getMemberXKeyword_0_2_1_2_0_0()); }

	'x' 

{ after(grammarAccess.getPostfixExpAccess().getMemberXKeyword_0_2_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getPostfixExpAccess().getMemberYKeyword_0_2_1_2_0_1()); }

	'y' 

{ after(grammarAccess.getPostfixExpAccess().getMemberYKeyword_0_2_1_2_0_1()); }
)

    |(
{ before(grammarAccess.getPostfixExpAccess().getMemberZKeyword_0_2_1_2_0_2()); }

	'z' 

{ after(grammarAccess.getPostfixExpAccess().getMemberZKeyword_0_2_1_2_0_2()); }
)

    |(
{ before(grammarAccess.getPostfixExpAccess().getMemberWKeyword_0_2_1_2_0_3()); }

	'w' 

{ after(grammarAccess.getPostfixExpAccess().getMemberWKeyword_0_2_1_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
(rule__Atomic__Group_0__0)
{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
(rule__Atomic__Group_1__0)
{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
(rule__Atomic__Group_2__0)
{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
(rule__Atomic__Group_3__0)
{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_4()); }
(rule__Atomic__Group_4__0)
{ after(grammarAccess.getAtomicAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_5()); }
(rule__Atomic__Group_5__0)
{ after(grammarAccess.getAtomicAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOpAccess().getNOT_EQUALEnumLiteralDeclaration_0()); }
(	'!=' 
)
{ after(grammarAccess.getLogicOpAccess().getNOT_EQUALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getLogicOpAccess().getEQUALEnumLiteralDeclaration_1()); }
(	'==' 
)
{ after(grammarAccess.getLogicOpAccess().getEQUALEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getLogicOpAccess().getLESSEREnumLiteralDeclaration_2()); }
(	'<' 
)
{ after(grammarAccess.getLogicOpAccess().getLESSEREnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getLogicOpAccess().getGREATEREnumLiteralDeclaration_3()); }
(	'>' 
)
{ after(grammarAccess.getLogicOpAccess().getGREATEREnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getLogicOpAccess().getLESSER_EQUALEnumLiteralDeclaration_4()); }
(	'<=' 
)
{ after(grammarAccess.getLogicOpAccess().getLESSER_EQUALEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getLogicOpAccess().getGREATER_EQUALEnumLiteralDeclaration_5()); }
(	'>=' 
)
{ after(grammarAccess.getLogicOpAccess().getGREATER_EQUALEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SourceFile__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceFile__Group__0__Impl
	rule__SourceFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getPreAssignment_0()); }
(rule__SourceFile__PreAssignment_0)*
{ after(grammarAccess.getSourceFileAccess().getPreAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SourceFile__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceFile__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getAlternatives_1()); }
(rule__SourceFile__Alternatives_1)*
{ after(grammarAccess.getSourceFileAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SourceFile__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceFile__Group_1_0__0__Impl
	rule__SourceFile__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getUniformsAssignment_1_0_0()); }
(rule__SourceFile__UniformsAssignment_1_0_0)
{ after(grammarAccess.getSourceFileAccess().getUniformsAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SourceFile__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceFile__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getSEMICOLONTerminalRuleCall_1_0_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getSourceFileAccess().getSEMICOLONTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SourceFile__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceFile__Group_1_1__0__Impl
	rule__SourceFile__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getAttribsAssignment_1_1_0()); }
(rule__SourceFile__AttribsAssignment_1_1_0)
{ after(grammarAccess.getSourceFileAccess().getAttribsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SourceFile__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceFile__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getSEMICOLONTerminalRuleCall_1_1_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getSourceFileAccess().getSEMICOLONTerminalRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SourceFile__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceFile__Group_1_2__0__Impl
	rule__SourceFile__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getPrototypesAssignment_1_2_0()); }
(rule__SourceFile__PrototypesAssignment_1_2_0)
{ after(grammarAccess.getSourceFileAccess().getPrototypesAssignment_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SourceFile__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceFile__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getSEMICOLONTerminalRuleCall_1_2_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getSourceFileAccess().getSEMICOLONTerminalRuleCall_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SourceFile__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceFile__Group_1_4__0__Impl
	rule__SourceFile__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getVariablesAssignment_1_4_0()); }
(rule__SourceFile__VariablesAssignment_1_4_0)
{ after(grammarAccess.getSourceFileAccess().getVariablesAssignment_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SourceFile__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceFile__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getSEMICOLONTerminalRuleCall_1_4_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getSourceFileAccess().getSEMICOLONTerminalRuleCall_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrecompilerVersion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecompilerVersion__Group__0__Impl
	rule__PrecompilerVersion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecompilerVersion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecompilerVersionAccess().getVersionKeyword_0()); }

	'#version' 

{ after(grammarAccess.getPrecompilerVersionAccess().getVersionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrecompilerVersion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecompilerVersion__Group__1__Impl
	rule__PrecompilerVersion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecompilerVersion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecompilerVersionAccess().getVersionAssignment_1()); }
(rule__PrecompilerVersion__VersionAssignment_1)
{ after(grammarAccess.getPrecompilerVersionAccess().getVersionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrecompilerVersion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecompilerVersion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecompilerVersion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecompilerVersionAccess().getProfileAssignment_2()); }
(rule__PrecompilerVersion__ProfileAssignment_2)?
{ after(grammarAccess.getPrecompilerVersionAccess().getProfileAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__0__Impl
	rule__Declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getUniformDeclarationParserRuleCall_0_0()); }
	ruleUniformDeclaration
{ after(grammarAccess.getDeclarationAccess().getUniformDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSEMICOLONTerminalRuleCall_0_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getDeclarationAccess().getSEMICOLONTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1__0__Impl
	rule__Declaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getAttributeDeclarationParserRuleCall_1_0()); }
	ruleAttributeDeclaration
{ after(grammarAccess.getDeclarationAccess().getAttributeDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSEMICOLONTerminalRuleCall_1_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getDeclarationAccess().getSEMICOLONTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_2__0__Impl
	rule__Declaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getFunctionPrototypeParserRuleCall_2_0()); }
	ruleFunctionPrototype
{ after(grammarAccess.getDeclarationAccess().getFunctionPrototypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSEMICOLONTerminalRuleCall_2_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getDeclarationAccess().getSEMICOLONTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__UniformDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniformDeclaration__Group__0__Impl
	rule__UniformDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UniformDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniformDeclarationAccess().getUniformDeclarationAction_0()); }
(

)
{ after(grammarAccess.getUniformDeclarationAccess().getUniformDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UniformDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniformDeclaration__Group__1__Impl
	rule__UniformDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UniformDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniformDeclarationAccess().getQualifierAssignment_1()); }
(rule__UniformDeclaration__QualifierAssignment_1)
{ after(grammarAccess.getUniformDeclarationAccess().getQualifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UniformDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniformDeclaration__Group__2__Impl
	rule__UniformDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UniformDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniformDeclarationAccess().getTypeAssignment_2()); }
(rule__UniformDeclaration__TypeAssignment_2)
{ after(grammarAccess.getUniformDeclarationAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UniformDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniformDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UniformDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniformDeclarationAccess().getNameAssignment_3()); }
(rule__UniformDeclaration__NameAssignment_3)
{ after(grammarAccess.getUniformDeclarationAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AttributeDeclaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group_0__0__Impl
	rule__AttributeDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getInAttributeDeclarationAction_0_0()); }
(

)
{ after(grammarAccess.getAttributeDeclarationAccess().getInAttributeDeclarationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group_0__1__Impl
	rule__AttributeDeclaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getQualifierAssignment_0_1()); }
(rule__AttributeDeclaration__QualifierAssignment_0_1)
{ after(grammarAccess.getAttributeDeclarationAccess().getQualifierAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group_0__2__Impl
	rule__AttributeDeclaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getTypeAssignment_0_2()); }
(rule__AttributeDeclaration__TypeAssignment_0_2)
{ after(grammarAccess.getAttributeDeclarationAccess().getTypeAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getNameAssignment_0_3()); }
(rule__AttributeDeclaration__NameAssignment_0_3)
{ after(grammarAccess.getAttributeDeclarationAccess().getNameAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AttributeDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group_1__0__Impl
	rule__AttributeDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getOutAttributeDeclarationAction_1_0()); }
(

)
{ after(grammarAccess.getAttributeDeclarationAccess().getOutAttributeDeclarationAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group_1__1__Impl
	rule__AttributeDeclaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getQualifierAssignment_1_1()); }
(rule__AttributeDeclaration__QualifierAssignment_1_1)
{ after(grammarAccess.getAttributeDeclarationAccess().getQualifierAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group_1__2__Impl
	rule__AttributeDeclaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getTypeAssignment_1_2()); }
(rule__AttributeDeclaration__TypeAssignment_1_2)
{ after(grammarAccess.getAttributeDeclarationAccess().getTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getNameAssignment_1_3()); }
(rule__AttributeDeclaration__NameAssignment_1_3)
{ after(grammarAccess.getAttributeDeclarationAccess().getNameAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AttributeDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group_2__0__Impl
	rule__AttributeDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getInOutAttributeDeclarationAction_2_0()); }
(

)
{ after(grammarAccess.getAttributeDeclarationAccess().getInOutAttributeDeclarationAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group_2__1__Impl
	rule__AttributeDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getQualifierAssignment_2_1()); }
(rule__AttributeDeclaration__QualifierAssignment_2_1)
{ after(grammarAccess.getAttributeDeclarationAccess().getQualifierAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group_2__2__Impl
	rule__AttributeDeclaration__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getTypeAssignment_2_2()); }
(rule__AttributeDeclaration__TypeAssignment_2_2)
{ after(grammarAccess.getAttributeDeclarationAccess().getTypeAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getNameAssignment_2_3()); }
(rule__AttributeDeclaration__NameAssignment_2_3)
{ after(grammarAccess.getAttributeDeclarationAccess().getNameAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionPrototype__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionPrototype__Group__0__Impl
	rule__FunctionPrototype__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionPrototype__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getTypeAssignment_0()); }
(rule__FunctionPrototype__TypeAssignment_0)
{ after(grammarAccess.getFunctionPrototypeAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionPrototype__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionPrototype__Group__1__Impl
	rule__FunctionPrototype__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionPrototype__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getNameAssignment_1()); }
(rule__FunctionPrototype__NameAssignment_1)
{ after(grammarAccess.getFunctionPrototypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionPrototype__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionPrototype__Group__2__Impl
	rule__FunctionPrototype__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionPrototype__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFunctionPrototypeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionPrototype__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionPrototype__Group__3__Impl
	rule__FunctionPrototype__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionPrototype__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getAlternatives_3()); }
(rule__FunctionPrototype__Alternatives_3)
{ after(grammarAccess.getFunctionPrototypeAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionPrototype__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionPrototype__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionPrototype__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFunctionPrototypeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionPrototype__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionPrototype__Group_3_1__0__Impl
	rule__FunctionPrototype__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionPrototype__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getParamsAssignment_3_1_0()); }
(rule__FunctionPrototype__ParamsAssignment_3_1_0)
{ after(grammarAccess.getFunctionPrototypeAccess().getParamsAssignment_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionPrototype__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionPrototype__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionPrototype__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getGroup_3_1_1()); }
(rule__FunctionPrototype__Group_3_1_1__0)*
{ after(grammarAccess.getFunctionPrototypeAccess().getGroup_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionPrototype__Group_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionPrototype__Group_3_1_1__0__Impl
	rule__FunctionPrototype__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionPrototype__Group_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getCommaKeyword_3_1_1_0()); }

	',' 

{ after(grammarAccess.getFunctionPrototypeAccess().getCommaKeyword_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionPrototype__Group_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionPrototype__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionPrototype__Group_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getParamsAssignment_3_1_1_1()); }
(rule__FunctionPrototype__ParamsAssignment_3_1_1_1)
{ after(grammarAccess.getFunctionPrototypeAccess().getParamsAssignment_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
(rule__Parameter__TypeAssignment_0)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
(rule__Parameter__NameAssignment_1)
{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getVoidTypeAction_2_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getVoidTypeAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameAssignment_2_1()); }
(rule__Type__NameAssignment_2_1)
{ after(grammarAccess.getTypeAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScalarType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarType__Group_0__0__Impl
	rule__ScalarType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getIntTypeAction_0_0()); }
(

)
{ after(grammarAccess.getScalarTypeAccess().getIntTypeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getNameAssignment_0_1()); }
(rule__ScalarType__NameAssignment_0_1)
{ after(grammarAccess.getScalarTypeAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScalarType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarType__Group_1__0__Impl
	rule__ScalarType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getUIntTypeAction_1_0()); }
(

)
{ after(grammarAccess.getScalarTypeAccess().getUIntTypeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getNameAssignment_1_1()); }
(rule__ScalarType__NameAssignment_1_1)
{ after(grammarAccess.getScalarTypeAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScalarType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarType__Group_2__0__Impl
	rule__ScalarType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getBoolTypeAction_2_0()); }
(

)
{ after(grammarAccess.getScalarTypeAccess().getBoolTypeAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getNameAssignment_2_1()); }
(rule__ScalarType__NameAssignment_2_1)
{ after(grammarAccess.getScalarTypeAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScalarType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarType__Group_3__0__Impl
	rule__ScalarType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getFloatTypeAction_3_0()); }
(

)
{ after(grammarAccess.getScalarTypeAccess().getFloatTypeAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getNameAssignment_3_1()); }
(rule__ScalarType__NameAssignment_3_1)
{ after(grammarAccess.getScalarTypeAccess().getNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VecType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_0__0__Impl
	rule__VecType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getVec2TypeAction_0_0()); }
(

)
{ after(grammarAccess.getVecTypeAccess().getVec2TypeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VecType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameAssignment_0_1()); }
(rule__VecType__NameAssignment_0_1)
{ after(grammarAccess.getVecTypeAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VecType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_1__0__Impl
	rule__VecType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getVec3TypeAction_1_0()); }
(

)
{ after(grammarAccess.getVecTypeAccess().getVec3TypeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VecType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameAssignment_1_1()); }
(rule__VecType__NameAssignment_1_1)
{ after(grammarAccess.getVecTypeAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VecType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_2__0__Impl
	rule__VecType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getVec4TypeAction_2_0()); }
(

)
{ after(grammarAccess.getVecTypeAccess().getVec4TypeAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VecType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameAssignment_2_1()); }
(rule__VecType__NameAssignment_2_1)
{ after(grammarAccess.getVecTypeAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VecType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_3__0__Impl
	rule__VecType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getIVec2TypeAction_3_0()); }
(

)
{ after(grammarAccess.getVecTypeAccess().getIVec2TypeAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VecType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameAssignment_3_1()); }
(rule__VecType__NameAssignment_3_1)
{ after(grammarAccess.getVecTypeAccess().getNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VecType__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_4__0__Impl
	rule__VecType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getIVec3TypeAction_4_0()); }
(

)
{ after(grammarAccess.getVecTypeAccess().getIVec3TypeAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VecType__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameAssignment_4_1()); }
(rule__VecType__NameAssignment_4_1)
{ after(grammarAccess.getVecTypeAccess().getNameAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VecType__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_5__0__Impl
	rule__VecType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getIVec4TypeAction_5_0()); }
(

)
{ after(grammarAccess.getVecTypeAccess().getIVec4TypeAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VecType__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameAssignment_5_1()); }
(rule__VecType__NameAssignment_5_1)
{ after(grammarAccess.getVecTypeAccess().getNameAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VecType__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_6__0__Impl
	rule__VecType__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getUVec2TypeAction_6_0()); }
(

)
{ after(grammarAccess.getVecTypeAccess().getUVec2TypeAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VecType__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameAssignment_6_1()); }
(rule__VecType__NameAssignment_6_1)
{ after(grammarAccess.getVecTypeAccess().getNameAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VecType__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_7__0__Impl
	rule__VecType__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getUVec3TypeAction_7_0()); }
(

)
{ after(grammarAccess.getVecTypeAccess().getUVec3TypeAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VecType__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameAssignment_7_1()); }
(rule__VecType__NameAssignment_7_1)
{ after(grammarAccess.getVecTypeAccess().getNameAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VecType__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_8__0__Impl
	rule__VecType__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getUVec4TypeAction_8_0()); }
(

)
{ after(grammarAccess.getVecTypeAccess().getUVec4TypeAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VecType__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameAssignment_8_1()); }
(rule__VecType__NameAssignment_8_1)
{ after(grammarAccess.getVecTypeAccess().getNameAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VecType__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_9__0__Impl
	rule__VecType__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getBVec2TypeAction_9_0()); }
(

)
{ after(grammarAccess.getVecTypeAccess().getBVec2TypeAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VecType__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameAssignment_9_1()); }
(rule__VecType__NameAssignment_9_1)
{ after(grammarAccess.getVecTypeAccess().getNameAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VecType__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_10__0__Impl
	rule__VecType__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getBVec3TypeAction_10_0()); }
(

)
{ after(grammarAccess.getVecTypeAccess().getBVec3TypeAction_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VecType__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameAssignment_10_1()); }
(rule__VecType__NameAssignment_10_1)
{ after(grammarAccess.getVecTypeAccess().getNameAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VecType__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_11__0__Impl
	rule__VecType__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getBVec4TypeAction_11_0()); }
(

)
{ after(grammarAccess.getVecTypeAccess().getBVec4TypeAction_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VecType__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VecType__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameAssignment_11_1()); }
(rule__VecType__NameAssignment_11_1)
{ after(grammarAccess.getVecTypeAccess().getNameAssignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MatType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_0__0__Impl
	rule__MatType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getMat2TypeAction_0_0()); }
(

)
{ after(grammarAccess.getMatTypeAccess().getMat2TypeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameAssignment_0_1()); }
(rule__MatType__NameAssignment_0_1)
{ after(grammarAccess.getMatTypeAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MatType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_1__0__Impl
	rule__MatType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getMat3TypeAction_1_0()); }
(

)
{ after(grammarAccess.getMatTypeAccess().getMat3TypeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameAssignment_1_1()); }
(rule__MatType__NameAssignment_1_1)
{ after(grammarAccess.getMatTypeAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MatType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_2__0__Impl
	rule__MatType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getMat4TypeAction_2_0()); }
(

)
{ after(grammarAccess.getMatTypeAccess().getMat4TypeAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameAssignment_2_1()); }
(rule__MatType__NameAssignment_2_1)
{ after(grammarAccess.getMatTypeAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MatType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_3__0__Impl
	rule__MatType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getMat2x2TypeAction_3_0()); }
(

)
{ after(grammarAccess.getMatTypeAccess().getMat2x2TypeAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameAssignment_3_1()); }
(rule__MatType__NameAssignment_3_1)
{ after(grammarAccess.getMatTypeAccess().getNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MatType__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_4__0__Impl
	rule__MatType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getMat2x3TypeAction_4_0()); }
(

)
{ after(grammarAccess.getMatTypeAccess().getMat2x3TypeAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatType__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameAssignment_4_1()); }
(rule__MatType__NameAssignment_4_1)
{ after(grammarAccess.getMatTypeAccess().getNameAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MatType__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_5__0__Impl
	rule__MatType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getMat2x4TypeAction_5_0()); }
(

)
{ after(grammarAccess.getMatTypeAccess().getMat2x4TypeAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatType__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameAssignment_5_1()); }
(rule__MatType__NameAssignment_5_1)
{ after(grammarAccess.getMatTypeAccess().getNameAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MatType__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_6__0__Impl
	rule__MatType__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getMat3x2TypeAction_6_0()); }
(

)
{ after(grammarAccess.getMatTypeAccess().getMat3x2TypeAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatType__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameAssignment_6_1()); }
(rule__MatType__NameAssignment_6_1)
{ after(grammarAccess.getMatTypeAccess().getNameAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MatType__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_7__0__Impl
	rule__MatType__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getMat3x3TypeAction_7_0()); }
(

)
{ after(grammarAccess.getMatTypeAccess().getMat3x3TypeAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatType__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameAssignment_7_1()); }
(rule__MatType__NameAssignment_7_1)
{ after(grammarAccess.getMatTypeAccess().getNameAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MatType__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_8__0__Impl
	rule__MatType__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getMat3x4TypeAction_8_0()); }
(

)
{ after(grammarAccess.getMatTypeAccess().getMat3x4TypeAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatType__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameAssignment_8_1()); }
(rule__MatType__NameAssignment_8_1)
{ after(grammarAccess.getMatTypeAccess().getNameAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MatType__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_9__0__Impl
	rule__MatType__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getMat4x2TypeAction_9_0()); }
(

)
{ after(grammarAccess.getMatTypeAccess().getMat4x2TypeAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatType__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameAssignment_9_1()); }
(rule__MatType__NameAssignment_9_1)
{ after(grammarAccess.getMatTypeAccess().getNameAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MatType__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_10__0__Impl
	rule__MatType__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getMat4x3TypeAction_10_0()); }
(

)
{ after(grammarAccess.getMatTypeAccess().getMat4x3TypeAction_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatType__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameAssignment_10_1()); }
(rule__MatType__NameAssignment_10_1)
{ after(grammarAccess.getMatTypeAccess().getNameAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MatType__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_11__0__Impl
	rule__MatType__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getMat4x4TypeAction_11_0()); }
(

)
{ after(grammarAccess.getMatTypeAccess().getMat4x4TypeAction_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatType__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatType__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameAssignment_11_1()); }
(rule__MatType__NameAssignment_11_1)
{ after(grammarAccess.getMatTypeAccess().getNameAssignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__0__Impl
	rule__FunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getFunctionPrototypeParserRuleCall_0()); }
	ruleFunctionPrototype
{ after(grammarAccess.getFunctionDefinitionAccess().getFunctionPrototypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__1__Impl
	rule__FunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getLEFT_BRACETerminalRuleCall_1()); }
	RULE_LEFT_BRACE
{ after(grammarAccess.getFunctionDefinitionAccess().getLEFT_BRACETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__2__Impl
	rule__FunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getStatementsAssignment_2()); }
(rule__FunctionDefinition__StatementsAssignment_2)*
{ after(grammarAccess.getFunctionDefinitionAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getRIGHT_BRACETerminalRuleCall_3()); }
	RULE_RIGHT_BRACE
{ after(grammarAccess.getFunctionDefinitionAccess().getRIGHT_BRACETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Statement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4__0__Impl
	rule__Statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSymbolRefAction_4_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getSymbolRefAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4__1__Impl
	rule__Statement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSymbolAssignment_4_1()); }
(rule__Statement__SymbolAssignment_4_1)
{ after(grammarAccess.getStatementAccess().getSymbolAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4__2__Impl
	rule__Statement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_4_2()); }
(rule__Statement__Group_4_2__0)?
{ after(grammarAccess.getStatementAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSEMICOLONTerminalRuleCall_4_3()); }
	RULE_SEMICOLON
{ after(grammarAccess.getStatementAccess().getSEMICOLONTerminalRuleCall_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4_2__0__Impl
	rule__Statement__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_4_2_0()); }

	'(' 

{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4_2__1__Impl
	rule__Statement__Group_4_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getActualsAssignment_4_2_1()); }
(rule__Statement__ActualsAssignment_4_2_1)?
{ after(grammarAccess.getStatementAccess().getActualsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4_2__2__Impl
	rule__Statement__Group_4_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_4_2_2()); }
(rule__Statement__Group_4_2_2__0)*
{ after(grammarAccess.getStatementAccess().getGroup_4_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_4_2_3()); }

	')' 

{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_4_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_4_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4_2_2__0__Impl
	rule__Statement__Group_4_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getCommaKeyword_4_2_2_0()); }

	',' 

{ after(grammarAccess.getStatementAccess().getCommaKeyword_4_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getActualsAssignment_4_2_2_1()); }
(rule__Statement__ActualsAssignment_4_2_2_1)
{ after(grammarAccess.getStatementAccess().getActualsAssignment_4_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5__0__Impl
	rule__Statement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIfStatementAction_5_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getIfStatementAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5__1__Impl
	rule__Statement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIFTerminalRuleCall_5_1()); }
	RULE_IF
{ after(grammarAccess.getStatementAccess().getIFTerminalRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5__2__Impl
	rule__Statement__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_5_2()); }

	'(' 

{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5__3__Impl
	rule__Statement__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getConditionAssignment_5_3()); }
(rule__Statement__ConditionAssignment_5_3)
{ after(grammarAccess.getStatementAccess().getConditionAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5__4__Impl
	rule__Statement__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_5_4()); }

	')' 

{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5__5__Impl
	rule__Statement__Group_5__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getThenAssignment_5_5()); }
(rule__Statement__ThenAssignment_5_5)
{ after(grammarAccess.getStatementAccess().getThenAssignment_5_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_5_6()); }
(rule__Statement__Group_5_6__0)?
{ after(grammarAccess.getStatementAccess().getGroup_5_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Statement__Group_5_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5_6__0__Impl
	rule__Statement__Group_5_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getELSETerminalRuleCall_5_6_0()); }
(	RULE_ELSE)
{ after(grammarAccess.getStatementAccess().getELSETerminalRuleCall_5_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getElseAssignment_5_6_1()); }
(rule__Statement__ElseAssignment_5_6_1)
{ after(grammarAccess.getStatementAccess().getElseAssignment_5_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_6__0__Impl
	rule__Statement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getWhileStatementAction_6_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getWhileStatementAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_6__1__Impl
	rule__Statement__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getWHILETerminalRuleCall_6_1()); }
	RULE_WHILE
{ after(grammarAccess.getStatementAccess().getWHILETerminalRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_6__2__Impl
	rule__Statement__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_6_2()); }

	'(' 

{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_6__3__Impl
	rule__Statement__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getConditionAssignment_6_3()); }
(rule__Statement__ConditionAssignment_6_3)
{ after(grammarAccess.getStatementAccess().getConditionAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_6__4__Impl
	rule__Statement__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_6_4()); }

	')' 

{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_6__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_6__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDoAssignment_6_5()); }
(rule__Statement__DoAssignment_6_5)
{ after(grammarAccess.getStatementAccess().getDoAssignment_6_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Statement__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__0__Impl
	rule__Statement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getWhileStatementAction_7_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getWhileStatementAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__1__Impl
	rule__Statement__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDOTerminalRuleCall_7_1()); }
	RULE_DO
{ after(grammarAccess.getStatementAccess().getDOTerminalRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__2__Impl
	rule__Statement__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDoAssignment_7_2()); }
(rule__Statement__DoAssignment_7_2)
{ after(grammarAccess.getStatementAccess().getDoAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__3__Impl
	rule__Statement__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getWHILETerminalRuleCall_7_3()); }
	RULE_WHILE
{ after(grammarAccess.getStatementAccess().getWHILETerminalRuleCall_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__4__Impl
	rule__Statement__Group_7__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_7_4()); }

	'(' 

{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_7_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__5__Impl
	rule__Statement__Group_7__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getConditionAssignment_7_5()); }
(rule__Statement__ConditionAssignment_7_5)
{ after(grammarAccess.getStatementAccess().getConditionAssignment_7_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__6__Impl
	rule__Statement__Group_7__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_7_6()); }

	')' 

{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_7_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSEMICOLONTerminalRuleCall_7_7()); }
	RULE_SEMICOLON
{ after(grammarAccess.getStatementAccess().getSEMICOLONTerminalRuleCall_7_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Statement__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__0__Impl
	rule__Statement__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getForStatementAction_8_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getForStatementAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__1__Impl
	rule__Statement__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getFORTerminalRuleCall_8_1()); }
	RULE_FOR
{ after(grammarAccess.getStatementAccess().getFORTerminalRuleCall_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__2__Impl
	rule__Statement__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_8_2()); }

	'(' 

{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__3__Impl
	rule__Statement__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAAssignment_8_3()); }
(rule__Statement__AAssignment_8_3)
{ after(grammarAccess.getStatementAccess().getAAssignment_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__4__Impl
	rule__Statement__Group_8__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSEMICOLONTerminalRuleCall_8_4()); }
	RULE_SEMICOLON
{ after(grammarAccess.getStatementAccess().getSEMICOLONTerminalRuleCall_8_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__5__Impl
	rule__Statement__Group_8__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getBAssignment_8_5()); }
(rule__Statement__BAssignment_8_5)?
{ after(grammarAccess.getStatementAccess().getBAssignment_8_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__6__Impl
	rule__Statement__Group_8__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSEMICOLONTerminalRuleCall_8_6()); }
	RULE_SEMICOLON
{ after(grammarAccess.getStatementAccess().getSEMICOLONTerminalRuleCall_8_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__7__Impl
	rule__Statement__Group_8__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getCAssignment_8_7()); }
(rule__Statement__CAssignment_8_7)?
{ after(grammarAccess.getStatementAccess().getCAssignment_8_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__8__Impl
	rule__Statement__Group_8__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_8_8()); }

	')' 

{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_8_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDoAssignment_8_9()); }
(rule__Statement__DoAssignment_8_9)
{ after(grammarAccess.getStatementAccess().getDoAssignment_8_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Statement__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__0__Impl
	rule__Statement__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSwitchStatementAction_9_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getSwitchStatementAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__1__Impl
	rule__Statement__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSWITCHTerminalRuleCall_9_1()); }
	RULE_SWITCH
{ after(grammarAccess.getStatementAccess().getSWITCHTerminalRuleCall_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__2__Impl
	rule__Statement__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_9_2()); }

	'(' 

{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__3__Impl
	rule__Statement__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAAssignment_9_3()); }
(rule__Statement__AAssignment_9_3)
{ after(grammarAccess.getStatementAccess().getAAssignment_9_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__4__Impl
	rule__Statement__Group_9__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_9_4()); }

	')' 

{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_9_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__5__Impl
	rule__Statement__Group_9__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getLEFT_BRACETerminalRuleCall_9_5()); }
	RULE_LEFT_BRACE
{ after(grammarAccess.getStatementAccess().getLEFT_BRACETerminalRuleCall_9_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__6__Impl
	rule__Statement__Group_9__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getCasesAssignment_9_6()); }
(rule__Statement__CasesAssignment_9_6)
{ after(grammarAccess.getStatementAccess().getCasesAssignment_9_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRIGHT_BRACETerminalRuleCall_9_7()); }
	RULE_RIGHT_BRACE
{ after(grammarAccess.getStatementAccess().getRIGHT_BRACETerminalRuleCall_9_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__SwitchCase__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group_0__0__Impl
	rule__SwitchCase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getCASETerminalRuleCall_0_0()); }
	RULE_CASE
{ after(grammarAccess.getSwitchCaseAccess().getCASETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchCase__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group_0__1__Impl
	rule__SwitchCase__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getAlternatives_0_1()); }
(rule__SwitchCase__Alternatives_0_1)
{ after(grammarAccess.getSwitchCaseAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchCase__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group_0__2__Impl
	rule__SwitchCase__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getCOLONTerminalRuleCall_0_2()); }
	RULE_COLON
{ after(grammarAccess.getSwitchCaseAccess().getCOLONTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchCase__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getThenAssignment_0_3()); }
(rule__SwitchCase__ThenAssignment_0_3)
{ after(grammarAccess.getSwitchCaseAccess().getThenAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SwitchCase__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group_1__0__Impl
	rule__SwitchCase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getDEFAULTTerminalRuleCall_1_0()); }
	RULE_DEFAULT
{ after(grammarAccess.getSwitchCaseAccess().getDEFAULTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchCase__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group_1__1__Impl
	rule__SwitchCase__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getCOLONTerminalRuleCall_1_1()); }
	RULE_COLON
{ after(grammarAccess.getSwitchCaseAccess().getCOLONTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchCase__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getThenAssignment_1_2()); }
(rule__SwitchCase__ThenAssignment_1_2)
{ after(grammarAccess.getSwitchCaseAccess().getThenAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BlockStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockStatement__Group__0__Impl
	rule__BlockStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockStatementAccess().getLEFT_BRACETerminalRuleCall_0()); }
	RULE_LEFT_BRACE
{ after(grammarAccess.getBlockStatementAccess().getLEFT_BRACETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockStatement__Group__1__Impl
	rule__BlockStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockStatementAccess().getStatementsAssignment_1()); }
(rule__BlockStatement__StatementsAssignment_1)*
{ after(grammarAccess.getBlockStatementAccess().getStatementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockStatementAccess().getRIGHT_BRACETerminalRuleCall_2()); }
	RULE_RIGHT_BRACE
{ after(grammarAccess.getBlockStatementAccess().getRIGHT_BRACETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JumpStatement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_0__0__Impl
	rule__JumpStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getCONTINUETerminalRuleCall_0_0()); }
	RULE_CONTINUE
{ after(grammarAccess.getJumpStatementAccess().getCONTINUETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_0_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JumpStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_1__0__Impl
	rule__JumpStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getBREAKTerminalRuleCall_1_0()); }
	RULE_BREAK
{ after(grammarAccess.getJumpStatementAccess().getBREAKTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_1_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JumpStatement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_2__0__Impl
	rule__JumpStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getReturnAction_2_0()); }
(

)
{ after(grammarAccess.getJumpStatementAccess().getReturnAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_2__1__Impl
	rule__JumpStatement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getRETURNTerminalRuleCall_2_1()); }
	RULE_RETURN
{ after(grammarAccess.getJumpStatementAccess().getRETURNTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_2_2()); }
	RULE_SEMICOLON
{ after(grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JumpStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_3__0__Impl
	rule__JumpStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getReturnAction_3_0()); }
(

)
{ after(grammarAccess.getJumpStatementAccess().getReturnAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_3__1__Impl
	rule__JumpStatement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getRETURNTerminalRuleCall_3_1()); }
	RULE_RETURN
{ after(grammarAccess.getJumpStatementAccess().getRETURNTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_3__2__Impl
	rule__JumpStatement__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getValueAssignment_3_2()); }
(rule__JumpStatement__ValueAssignment_3_2)
{ after(grammarAccess.getJumpStatementAccess().getValueAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_3_3()); }
	RULE_SEMICOLON
{ after(grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__JumpStatement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_4__0__Impl
	rule__JumpStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getDISCARDTerminalRuleCall_4_0()); }
	RULE_DISCARD
{ after(grammarAccess.getJumpStatementAccess().getDISCARDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_4_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0()); }
(rule__VariableDeclaration__TypeAssignment_0)
{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1()); }
(rule__VariableDeclaration__NameAssignment_1)
{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_2()); }
(rule__VariableDeclaration__Group_2__0)?
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getSEMICOLONTerminalRuleCall_3()); }
	RULE_SEMICOLON
{ after(grammarAccess.getVariableDeclarationAccess().getSEMICOLONTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_2__0__Impl
	rule__VariableDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getInitAssignment_2_1()); }
(rule__VariableDeclaration__InitAssignment_2_1)
{ after(grammarAccess.getVariableDeclarationAccess().getInitAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignmentStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__0__Impl
	rule__AssignmentStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getVariableAssignment_0()); }
(rule__AssignmentStatement__VariableAssignment_0)
{ after(grammarAccess.getAssignmentStatementAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__1__Impl
	rule__AssignmentStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAssignmentStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__2__Impl
	rule__AssignmentStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getRightAssignment_2()); }
(rule__AssignmentStatement__RightAssignment_2)
{ after(grammarAccess.getAssignmentStatementAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getSEMICOLONTerminalRuleCall_3()); }
	RULE_SEMICOLON
{ after(grammarAccess.getAssignmentStatementAccess().getSEMICOLONTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Exp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp__Group__0__Impl
	rule__Exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getLogicExpParserRuleCall_0()); }
	ruleLogicExp
{ after(grammarAccess.getExpAccess().getLogicExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getGroup_1()); }
(rule__Exp__Group_1__0)?
{ after(grammarAccess.getExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp__Group_1__0__Impl
	rule__Exp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getInlineIfExpConditionAction_1_0()); }
(

)
{ after(grammarAccess.getExpAccess().getInlineIfExpConditionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp__Group_1__1__Impl
	rule__Exp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getQUESTIONTerminalRuleCall_1_1()); }
(	RULE_QUESTION)
{ after(grammarAccess.getExpAccess().getQUESTIONTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp__Group_1__2__Impl
	rule__Exp__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getThenAssignment_1_2()); }
(rule__Exp__ThenAssignment_1_2)
{ after(grammarAccess.getExpAccess().getThenAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp__Group_1__3__Impl
	rule__Exp__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getCOLONTerminalRuleCall_1_3()); }
	RULE_COLON
{ after(grammarAccess.getExpAccess().getCOLONTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getElseAssignment_1_4()); }
(rule__Exp__ElseAssignment_1_4)
{ after(grammarAccess.getExpAccess().getElseAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LogicExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicExp__Group__0__Impl
	rule__LogicExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExpAccess().getAddExpParserRuleCall_0()); }
	ruleAddExp
{ after(grammarAccess.getLogicExpAccess().getAddExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExpAccess().getGroup_1()); }
(rule__LogicExp__Group_1__0)?
{ after(grammarAccess.getLogicExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicExp__Group_1__0__Impl
	rule__LogicExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExpAccess().getLogicExpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getLogicExpAccess().getLogicExpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicExp__Group_1__1__Impl
	rule__LogicExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExpAccess().getOpAssignment_1_1()); }
(rule__LogicExp__OpAssignment_1_1)
{ after(grammarAccess.getLogicExpAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExpAccess().getRightAssignment_1_2()); }
(rule__LogicExp__RightAssignment_1_2)
{ after(grammarAccess.getLogicExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AddExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExp__Group__0__Impl
	rule__AddExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getMulExpParserRuleCall_0()); }
	ruleMulExp
{ after(grammarAccess.getAddExpAccess().getMulExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getGroup_1()); }
(rule__AddExp__Group_1__0)*
{ after(grammarAccess.getAddExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExp__Group_1__0__Impl
	rule__AddExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getAddExpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAddExpAccess().getAddExpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExp__Group_1__1__Impl
	rule__AddExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getOpAssignment_1_1()); }
(rule__AddExp__OpAssignment_1_1)
{ after(grammarAccess.getAddExpAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getRightAssignment_1_2()); }
(rule__AddExp__RightAssignment_1_2)
{ after(grammarAccess.getAddExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MulExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MulExp__Group__0__Impl
	rule__MulExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExpAccess().getPostfixExpParserRuleCall_0()); }
	rulePostfixExp
{ after(grammarAccess.getMulExpAccess().getPostfixExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MulExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MulExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExpAccess().getGroup_1()); }
(rule__MulExp__Group_1__0)*
{ after(grammarAccess.getMulExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MulExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MulExp__Group_1__0__Impl
	rule__MulExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExpAccess().getMulExpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getMulExpAccess().getMulExpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MulExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MulExp__Group_1__1__Impl
	rule__MulExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExpAccess().getOpAssignment_1_1()); }
(rule__MulExp__OpAssignment_1_1)
{ after(grammarAccess.getMulExpAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MulExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MulExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExpAccess().getRightAssignment_1_2()); }
(rule__MulExp__RightAssignment_1_2)
{ after(grammarAccess.getMulExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PostfixExp__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExp__Group_0__0__Impl
	rule__PostfixExp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getSymbolRefAction_0_0()); }
(

)
{ after(grammarAccess.getPostfixExpAccess().getSymbolRefAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExp__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExp__Group_0__1__Impl
	rule__PostfixExp__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getSymbolAssignment_0_1()); }
(rule__PostfixExp__SymbolAssignment_0_1)
{ after(grammarAccess.getPostfixExpAccess().getSymbolAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExp__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExp__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getAlternatives_0_2()); }
(rule__PostfixExp__Alternatives_0_2)?
{ after(grammarAccess.getPostfixExpAccess().getAlternatives_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PostfixExp__Group_0_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExp__Group_0_2_0__0__Impl
	rule__PostfixExp__Group_0_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group_0_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getSymbolRefInvocationSymbolrefAction_0_2_0_0()); }
(

)
{ after(grammarAccess.getPostfixExpAccess().getSymbolRefInvocationSymbolrefAction_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExp__Group_0_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExp__Group_0_2_0__1__Impl
	rule__PostfixExp__Group_0_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group_0_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getLeftParenthesisKeyword_0_2_0_1()); }
(
	'(' 
)
{ after(grammarAccess.getPostfixExpAccess().getLeftParenthesisKeyword_0_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExp__Group_0_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExp__Group_0_2_0__2__Impl
	rule__PostfixExp__Group_0_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group_0_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getActualsAssignment_0_2_0_2()); }
(rule__PostfixExp__ActualsAssignment_0_2_0_2)?
{ after(grammarAccess.getPostfixExpAccess().getActualsAssignment_0_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExp__Group_0_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExp__Group_0_2_0__3__Impl
	rule__PostfixExp__Group_0_2_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group_0_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getGroup_0_2_0_3()); }
(rule__PostfixExp__Group_0_2_0_3__0)*
{ after(grammarAccess.getPostfixExpAccess().getGroup_0_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExp__Group_0_2_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExp__Group_0_2_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group_0_2_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getRightParenthesisKeyword_0_2_0_4()); }

	')' 

{ after(grammarAccess.getPostfixExpAccess().getRightParenthesisKeyword_0_2_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PostfixExp__Group_0_2_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExp__Group_0_2_0_3__0__Impl
	rule__PostfixExp__Group_0_2_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group_0_2_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getCommaKeyword_0_2_0_3_0()); }

	',' 

{ after(grammarAccess.getPostfixExpAccess().getCommaKeyword_0_2_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExp__Group_0_2_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExp__Group_0_2_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group_0_2_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getActualsAssignment_0_2_0_3_1()); }
(rule__PostfixExp__ActualsAssignment_0_2_0_3_1)
{ after(grammarAccess.getPostfixExpAccess().getActualsAssignment_0_2_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixExp__Group_0_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExp__Group_0_2_1__0__Impl
	rule__PostfixExp__Group_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group_0_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getSymbolRefMemberSymbolrefAction_0_2_1_0()); }
(

)
{ after(grammarAccess.getPostfixExpAccess().getSymbolRefMemberSymbolrefAction_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExp__Group_0_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExp__Group_0_2_1__1__Impl
	rule__PostfixExp__Group_0_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group_0_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getFullStopKeyword_0_2_1_1()); }
(
	'.' 
)
{ after(grammarAccess.getPostfixExpAccess().getFullStopKeyword_0_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExp__Group_0_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExp__Group_0_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group_0_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getMemberAssignment_0_2_1_2()); }
(rule__PostfixExp__MemberAssignment_0_2_1_2)
{ after(grammarAccess.getPostfixExpAccess().getMemberAssignment_0_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Atomic__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getConstructorAction_0_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getConstructorAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__1__Impl
	rule__Atomic__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getTypeAssignment_0_1()); }
(rule__Atomic__TypeAssignment_0_1)
{ after(grammarAccess.getAtomicAccess().getTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__2__Impl
	rule__Atomic__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_0_2()); }

	'(' 

{ after(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__3__Impl
	rule__Atomic__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getGroup_0_3()); }
(rule__Atomic__Group_0_3__0)?
{ after(grammarAccess.getAtomicAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_0_4()); }

	')' 

{ after(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Atomic__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0_3__0__Impl
	rule__Atomic__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getParamsAssignment_0_3_0()); }
(rule__Atomic__ParamsAssignment_0_3_0)
{ after(grammarAccess.getAtomicAccess().getParamsAssignment_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getGroup_0_3_1()); }
(rule__Atomic__Group_0_3_1__0)*
{ after(grammarAccess.getAtomicAccess().getGroup_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_0_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0_3_1__0__Impl
	rule__Atomic__Group_0_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getCommaKeyword_0_3_1_0()); }

	',' 

{ after(grammarAccess.getAtomicAccess().getCommaKeyword_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getParamsAssignment_0_3_1_1()); }
(rule__Atomic__ParamsAssignment_0_3_1_1)
{ after(grammarAccess.getAtomicAccess().getParamsAssignment_0_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getIntegerLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getIntegerLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
(rule__Atomic__ValueAssignment_1_1)
{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getUIntegerLiteralAction_2_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getUIntegerLiteralAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
(rule__Atomic__ValueAssignment_2_1)
{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getFloatLiteralAction_3_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getFloatLiteralAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
(rule__Atomic__ValueAssignment_3_1)
{ after(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_4__0__Impl
	rule__Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getBoolLiteralAction_4_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getBoolLiteralAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAssignment_4_1()); }
(rule__Atomic__ValueAssignment_4_1)
{ after(grammarAccess.getAtomicAccess().getValueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_5__0__Impl
	rule__Atomic__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_5_0()); }

	'(' 

{ after(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_5__1__Impl
	rule__Atomic__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getExpParserRuleCall_5_1()); }
	ruleExp
{ after(grammarAccess.getAtomicAccess().getExpParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_5_2()); }

	')' 

{ after(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Definition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_0()); }
(rule__Definition__NameAssignment_0)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getGroup_1()); }
(rule__Definition__Group_1__0)?
{ after(grammarAccess.getDefinitionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1__0__Impl
	rule__Definition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1__1__Impl
	rule__Definition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getArgsAssignment_1_1()); }
(rule__Definition__ArgsAssignment_1_1)
{ after(grammarAccess.getDefinitionAccess().getArgsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1__2__Impl
	rule__Definition__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getGroup_1_2()); }
(rule__Definition__Group_1_2__0)*
{ after(grammarAccess.getDefinitionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Definition__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1_2__0__Impl
	rule__Definition__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getDefinitionAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getArgsAssignment_1_2_1()); }
(rule__Definition__ArgsAssignment_1_2_1)
{ after(grammarAccess.getDefinitionAccess().getArgsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SourceFile__PreAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getPrePrecompilerStatementParserRuleCall_0_0()); }
	rulePrecompilerStatement{ after(grammarAccess.getSourceFileAccess().getPrePrecompilerStatementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__UniformsAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getUniformsUniformDeclarationParserRuleCall_1_0_0_0()); }
	ruleUniformDeclaration{ after(grammarAccess.getSourceFileAccess().getUniformsUniformDeclarationParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__AttribsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getAttribsAttributeDeclarationParserRuleCall_1_1_0_0()); }
	ruleAttributeDeclaration{ after(grammarAccess.getSourceFileAccess().getAttribsAttributeDeclarationParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__PrototypesAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getPrototypesFunctionPrototypeParserRuleCall_1_2_0_0()); }
	ruleFunctionPrototype{ after(grammarAccess.getSourceFileAccess().getPrototypesFunctionPrototypeParserRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__FunctionsAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getFunctionsFunctionDefinitionParserRuleCall_1_3_0()); }
	ruleFunctionDefinition{ after(grammarAccess.getSourceFileAccess().getFunctionsFunctionDefinitionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__VariablesAssignment_1_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceFileAccess().getVariablesVariableDeclarationParserRuleCall_1_4_0_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getSourceFileAccess().getVariablesVariableDeclarationParserRuleCall_1_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrecompilerVersion__VersionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecompilerVersionAccess().getVersionINTCONSTANTTerminalRuleCall_1_0()); }
	RULE_INTCONSTANT{ after(grammarAccess.getPrecompilerVersionAccess().getVersionINTCONSTANTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrecompilerVersion__ProfileAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecompilerVersionAccess().getProfileIDENTIFIERTerminalRuleCall_2_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getPrecompilerVersionAccess().getProfileIDENTIFIERTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UniformDeclaration__QualifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniformDeclarationAccess().getQualifierUNIFORMTerminalRuleCall_1_0()); }
	RULE_UNIFORM{ after(grammarAccess.getUniformDeclarationAccess().getQualifierUNIFORMTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UniformDeclaration__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniformDeclarationAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getUniformDeclarationAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UniformDeclaration__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniformDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_3_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getUniformDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__QualifierAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getQualifierINTerminalRuleCall_0_1_0()); }
	RULE_IN{ after(grammarAccess.getAttributeDeclarationAccess().getQualifierINTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__TypeAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getTypeTypeParserRuleCall_0_2_0()); }
	ruleType{ after(grammarAccess.getAttributeDeclarationAccess().getTypeTypeParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__NameAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_0_3_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getAttributeDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__QualifierAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getQualifierOUTTerminalRuleCall_1_1_0()); }
	RULE_OUT{ after(grammarAccess.getAttributeDeclarationAccess().getQualifierOUTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__TypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getTypeTypeParserRuleCall_1_2_0()); }
	ruleType{ after(grammarAccess.getAttributeDeclarationAccess().getTypeTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__NameAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_1_3_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getAttributeDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__QualifierAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getQualifierINOUTTerminalRuleCall_2_1_0()); }
	RULE_INOUT{ after(grammarAccess.getAttributeDeclarationAccess().getQualifierINOUTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__TypeAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getTypeTypeParserRuleCall_2_2_0()); }
	ruleType{ after(grammarAccess.getAttributeDeclarationAccess().getTypeTypeParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__NameAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_2_3_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getAttributeDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionPrototype__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getFunctionPrototypeAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionPrototype__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getNameIDENTIFIERTerminalRuleCall_1_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getFunctionPrototypeAccess().getNameIDENTIFIERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionPrototype__ParamsAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getParamsParameterParserRuleCall_3_1_0_0()); }
	ruleParameter{ after(grammarAccess.getFunctionPrototypeAccess().getParamsParameterParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionPrototype__ParamsAssignment_3_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionPrototypeAccess().getParamsParameterParserRuleCall_3_1_1_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionPrototypeAccess().getParamsParameterParserRuleCall_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameIDENTIFIERTerminalRuleCall_1_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getParameterAccess().getNameIDENTIFIERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameVOIDTerminalRuleCall_2_1_0()); }
	RULE_VOID{ after(grammarAccess.getTypeAccess().getNameVOIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getNameINTXTerminalRuleCall_0_1_0()); }
	RULE_INTX{ after(grammarAccess.getScalarTypeAccess().getNameINTXTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getNameUINTTerminalRuleCall_1_1_0()); }
	RULE_UINT{ after(grammarAccess.getScalarTypeAccess().getNameUINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getNameBOOLTerminalRuleCall_2_1_0()); }
	RULE_BOOL{ after(grammarAccess.getScalarTypeAccess().getNameBOOLTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__NameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getNameFLOATTerminalRuleCall_3_1_0()); }
	RULE_FLOAT{ after(grammarAccess.getScalarTypeAccess().getNameFLOATTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameVEC2TerminalRuleCall_0_1_0()); }
	RULE_VEC2{ after(grammarAccess.getVecTypeAccess().getNameVEC2TerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameVEC3TerminalRuleCall_1_1_0()); }
	RULE_VEC3{ after(grammarAccess.getVecTypeAccess().getNameVEC3TerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameVEC4TerminalRuleCall_2_1_0()); }
	RULE_VEC4{ after(grammarAccess.getVecTypeAccess().getNameVEC4TerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__NameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameIVEC2TerminalRuleCall_3_1_0()); }
	RULE_IVEC2{ after(grammarAccess.getVecTypeAccess().getNameIVEC2TerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__NameAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameIVEC3TerminalRuleCall_4_1_0()); }
	RULE_IVEC3{ after(grammarAccess.getVecTypeAccess().getNameIVEC3TerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__NameAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameIVEC4TerminalRuleCall_5_1_0()); }
	RULE_IVEC4{ after(grammarAccess.getVecTypeAccess().getNameIVEC4TerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__NameAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameUVEC2TerminalRuleCall_6_1_0()); }
	RULE_UVEC2{ after(grammarAccess.getVecTypeAccess().getNameUVEC2TerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__NameAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameUVEC3TerminalRuleCall_7_1_0()); }
	RULE_UVEC3{ after(grammarAccess.getVecTypeAccess().getNameUVEC3TerminalRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__NameAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameUVEC4TerminalRuleCall_8_1_0()); }
	RULE_UVEC4{ after(grammarAccess.getVecTypeAccess().getNameUVEC4TerminalRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__NameAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameBVEC2TerminalRuleCall_9_1_0()); }
	RULE_BVEC2{ after(grammarAccess.getVecTypeAccess().getNameBVEC2TerminalRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__NameAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameBVEC3TerminalRuleCall_10_1_0()); }
	RULE_BVEC3{ after(grammarAccess.getVecTypeAccess().getNameBVEC3TerminalRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VecType__NameAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVecTypeAccess().getNameBVEC4TerminalRuleCall_11_1_0()); }
	RULE_BVEC4{ after(grammarAccess.getVecTypeAccess().getNameBVEC4TerminalRuleCall_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameMAT2TerminalRuleCall_0_1_0()); }
	RULE_MAT2{ after(grammarAccess.getMatTypeAccess().getNameMAT2TerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameMAT3TerminalRuleCall_1_1_0()); }
	RULE_MAT3{ after(grammarAccess.getMatTypeAccess().getNameMAT3TerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameMAT4TerminalRuleCall_2_1_0()); }
	RULE_MAT4{ after(grammarAccess.getMatTypeAccess().getNameMAT4TerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__NameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameMAT2X2TerminalRuleCall_3_1_0()); }
	RULE_MAT2X2{ after(grammarAccess.getMatTypeAccess().getNameMAT2X2TerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__NameAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameMAT2X3TerminalRuleCall_4_1_0()); }
	RULE_MAT2X3{ after(grammarAccess.getMatTypeAccess().getNameMAT2X3TerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__NameAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameMAT2X4TerminalRuleCall_5_1_0()); }
	RULE_MAT2X4{ after(grammarAccess.getMatTypeAccess().getNameMAT2X4TerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__NameAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameMAT3X2TerminalRuleCall_6_1_0()); }
	RULE_MAT3X2{ after(grammarAccess.getMatTypeAccess().getNameMAT3X2TerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__NameAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameMAT3X3TerminalRuleCall_7_1_0()); }
	RULE_MAT3X3{ after(grammarAccess.getMatTypeAccess().getNameMAT3X3TerminalRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__NameAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameMAT3X4TerminalRuleCall_8_1_0()); }
	RULE_MAT3X4{ after(grammarAccess.getMatTypeAccess().getNameMAT3X4TerminalRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__NameAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameMAT4X2TerminalRuleCall_9_1_0()); }
	RULE_MAT4X2{ after(grammarAccess.getMatTypeAccess().getNameMAT4X2TerminalRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__NameAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameMAT4X3TerminalRuleCall_10_1_0()); }
	RULE_MAT4X3{ after(grammarAccess.getMatTypeAccess().getNameMAT4X3TerminalRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatType__NameAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatTypeAccess().getNameMAT4X4TerminalRuleCall_11_1_0()); }
	RULE_MAT4X4{ after(grammarAccess.getMatTypeAccess().getNameMAT4X4TerminalRuleCall_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getFunctionDefinitionAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__Statement__SymbolAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSymbolSymbolCrossReference_4_1_0()); }
(
{ before(grammarAccess.getStatementAccess().getSymbolSymbolIDENTIFIERTerminalRuleCall_4_1_0_1()); }
	RULE_IDENTIFIER{ after(grammarAccess.getStatementAccess().getSymbolSymbolIDENTIFIERTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getStatementAccess().getSymbolSymbolCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ActualsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getActualsExpParserRuleCall_4_2_1_0()); }
	ruleExp{ after(grammarAccess.getStatementAccess().getActualsExpParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ActualsAssignment_4_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getActualsExpParserRuleCall_4_2_2_1_0()); }
	ruleExp{ after(grammarAccess.getStatementAccess().getActualsExpParserRuleCall_4_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ConditionAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getConditionExpParserRuleCall_5_3_0()); }
	ruleExp{ after(grammarAccess.getStatementAccess().getConditionExpParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ThenAssignment_5_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getThenStatementParserRuleCall_5_5_0()); }
	ruleStatement{ after(grammarAccess.getStatementAccess().getThenStatementParserRuleCall_5_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ElseAssignment_5_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getElseStatementParserRuleCall_5_6_1_0()); }
	ruleStatement{ after(grammarAccess.getStatementAccess().getElseStatementParserRuleCall_5_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ConditionAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getConditionExpParserRuleCall_6_3_0()); }
	ruleExp{ after(grammarAccess.getStatementAccess().getConditionExpParserRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DoAssignment_6_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_6_5_0()); }
	ruleStatement{ after(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_6_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DoAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDoBlockStatementParserRuleCall_7_2_0()); }
	ruleBlockStatement{ after(grammarAccess.getStatementAccess().getDoBlockStatementParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ConditionAssignment_7_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getConditionExpParserRuleCall_7_5_0()); }
	ruleExp{ after(grammarAccess.getStatementAccess().getConditionExpParserRuleCall_7_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__AAssignment_8_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAAlternatives_8_3_0()); }
(rule__Statement__AAlternatives_8_3_0)
{ after(grammarAccess.getStatementAccess().getAAlternatives_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__BAssignment_8_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getBExpParserRuleCall_8_5_0()); }
	ruleExp{ after(grammarAccess.getStatementAccess().getBExpParserRuleCall_8_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__CAssignment_8_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getCExpParserRuleCall_8_7_0()); }
	ruleExp{ after(grammarAccess.getStatementAccess().getCExpParserRuleCall_8_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DoAssignment_8_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_8_9_0()); }
	ruleStatement{ after(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_8_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__AAssignment_9_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAExpParserRuleCall_9_3_0()); }
	ruleExp{ after(grammarAccess.getStatementAccess().getAExpParserRuleCall_9_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__CasesAssignment_9_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getCasesSwitchCaseParserRuleCall_9_6_0()); }
	ruleSwitchCase{ after(grammarAccess.getStatementAccess().getCasesSwitchCaseParserRuleCall_9_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__CaseAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getCaseINTCONSTANTTerminalRuleCall_0_1_0_0()); }
	RULE_INTCONSTANT{ after(grammarAccess.getSwitchCaseAccess().getCaseINTCONSTANTTerminalRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__CaseAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getCaseUINTCONSTANTTerminalRuleCall_0_1_1_0()); }
	RULE_UINTCONSTANT{ after(grammarAccess.getSwitchCaseAccess().getCaseUINTCONSTANTTerminalRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__FcaseAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getFcaseFLOATCONSTANTTerminalRuleCall_0_1_2_0()); }
	RULE_FLOATCONSTANT{ after(grammarAccess.getSwitchCaseAccess().getFcaseFLOATCONSTANTTerminalRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__ThenAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getThenStatementParserRuleCall_0_3_0()); }
	ruleStatement{ after(grammarAccess.getSwitchCaseAccess().getThenStatementParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__ThenAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getThenStatementParserRuleCall_1_2_0()); }
	ruleStatement{ after(grammarAccess.getSwitchCaseAccess().getThenStatementParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__StatementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockStatementAccess().getStatementsStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getBlockStatementAccess().getStatementsStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__ValueAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getValueExpParserRuleCall_3_2_0()); }
	ruleExp{ after(grammarAccess.getJumpStatementAccess().getValueExpParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_1_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getVariableDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__InitAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getInitExpParserRuleCall_2_1_0()); }
	ruleExp{ after(grammarAccess.getVariableDeclarationAccess().getInitExpParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getVariableSymbolCrossReference_0_0()); }
(
{ before(grammarAccess.getAssignmentStatementAccess().getVariableSymbolIDENTIFIERTerminalRuleCall_0_0_1()); }
	RULE_IDENTIFIER{ after(grammarAccess.getAssignmentStatementAccess().getVariableSymbolIDENTIFIERTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAssignmentStatementAccess().getVariableSymbolCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStatementAccess().getRightExpParserRuleCall_2_0()); }
	ruleExp{ after(grammarAccess.getAssignmentStatementAccess().getRightExpParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__ThenAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getThenExpParserRuleCall_1_2_0()); }
	ruleExp{ after(grammarAccess.getExpAccess().getThenExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__ElseAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getElseExpParserRuleCall_1_4_0()); }
	ruleExp{ after(grammarAccess.getExpAccess().getElseExpParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExpAccess().getOpLogicOpEnumRuleCall_1_1_0()); }
	ruleLogicOp{ after(grammarAccess.getLogicExpAccess().getOpLogicOpEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExpAccess().getRightAddExpParserRuleCall_1_2_0()); }
	ruleAddExp{ after(grammarAccess.getLogicExpAccess().getRightAddExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getOpAddOpParserRuleCall_1_1_0()); }
	ruleAddOp{ after(grammarAccess.getAddExpAccess().getOpAddOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getRightMulExpParserRuleCall_1_2_0()); }
	ruleMulExp{ after(grammarAccess.getAddExpAccess().getRightMulExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MulExp__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExpAccess().getOpMulOpParserRuleCall_1_1_0()); }
	ruleMulOp{ after(grammarAccess.getMulExpAccess().getOpMulOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MulExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExpAccess().getRightPostfixExpParserRuleCall_1_2_0()); }
	rulePostfixExp{ after(grammarAccess.getMulExpAccess().getRightPostfixExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__SymbolAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getSymbolSymbolCrossReference_0_1_0()); }
(
{ before(grammarAccess.getPostfixExpAccess().getSymbolSymbolIDENTIFIERTerminalRuleCall_0_1_0_1()); }
	RULE_IDENTIFIER{ after(grammarAccess.getPostfixExpAccess().getSymbolSymbolIDENTIFIERTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getPostfixExpAccess().getSymbolSymbolCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__ActualsAssignment_0_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getActualsExpParserRuleCall_0_2_0_2_0()); }
	ruleExp{ after(grammarAccess.getPostfixExpAccess().getActualsExpParserRuleCall_0_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__ActualsAssignment_0_2_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getActualsExpParserRuleCall_0_2_0_3_1_0()); }
	ruleExp{ after(grammarAccess.getPostfixExpAccess().getActualsExpParserRuleCall_0_2_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__MemberAssignment_0_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpAccess().getMemberAlternatives_0_2_1_2_0()); }
(rule__PostfixExp__MemberAlternatives_0_2_1_2_0)
{ after(grammarAccess.getPostfixExpAccess().getMemberAlternatives_0_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__TypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getTypeComplexTypeParserRuleCall_0_1_0()); }
	ruleComplexType{ after(grammarAccess.getAtomicAccess().getTypeComplexTypeParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ParamsAssignment_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getParamsExpParserRuleCall_0_3_0_0()); }
	ruleExp{ after(grammarAccess.getAtomicAccess().getParamsExpParserRuleCall_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ParamsAssignment_0_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getParamsExpParserRuleCall_0_3_1_1_0()); }
	ruleExp{ after(grammarAccess.getAtomicAccess().getParamsExpParserRuleCall_0_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueINTCONSTANTTerminalRuleCall_1_1_0()); }
	RULE_INTCONSTANT{ after(grammarAccess.getAtomicAccess().getValueINTCONSTANTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueUINTCONSTANTTerminalRuleCall_2_1_0()); }
	RULE_UINTCONSTANT{ after(grammarAccess.getAtomicAccess().getValueUINTCONSTANTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueFLOATCONSTANTTerminalRuleCall_3_1_0()); }
	RULE_FLOATCONSTANT{ after(grammarAccess.getAtomicAccess().getValueFLOATCONSTANTTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueBOOLCONSTANTTerminalRuleCall_4_1_0()); }
	RULE_BOOLCONSTANT{ after(grammarAccess.getAtomicAccess().getValueBOOLCONSTANTTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDENTIFIERTerminalRuleCall_0_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getDefinitionAccess().getNameIDENTIFIERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__ArgsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getArgsDeclaredParameterParserRuleCall_1_1_0()); }
	ruleDeclaredParameter{ after(grammarAccess.getDefinitionAccess().getArgsDeclaredParameterParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__ArgsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getArgsDeclaredParameterParserRuleCall_1_2_1_0()); }
	ruleDeclaredParameter{ after(grammarAccess.getDefinitionAccess().getArgsDeclaredParameterParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredParameter__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredParameterAccess().getNameIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getDeclaredParameterAccess().getNameIDENTIFIERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



RULE_ATTRIBUTE : 'attribute';

RULE_CONST : 'const';

RULE_BOOL : 'bool';

RULE_FLOAT : 'float';

RULE_INTX : 'int';

RULE_UINT : 'uint';

RULE_BREAK : 'break';

RULE_CONTINUE : 'continue';

RULE_DO : 'do';

RULE_ELSE : 'else';

RULE_FOR : 'for';

RULE_IF : 'if';

RULE_DISCARD : 'discard';

RULE_RETURN : 'return';

RULE_SWITCH : 'switch';

RULE_CASE : 'case';

RULE_DEFAULT : 'default';

RULE_BVEC2 : 'bvec2';

RULE_BVEC3 : 'bvec3';

RULE_BVEC4 : 'bvec4';

RULE_IVEC2 : 'ivec2';

RULE_IVEC3 : 'ivec3';

RULE_IVEC4 : 'ivec4';

RULE_UVEC2 : 'uvec2';

RULE_UVEC3 : 'uvec3';

RULE_UVEC4 : 'uvec4';

RULE_VEC2 : 'vec2';

RULE_VEC3 : 'vec3';

RULE_VEC4 : 'vec4';

RULE_MAT2 : 'mat2';

RULE_MAT3 : 'mat3';

RULE_MAT4 : 'mat4';

RULE_CENTROID : 'centroid';

RULE_IN : 'in';

RULE_OUT : 'out';

RULE_INOUT : 'inout';

RULE_UNIFORM : 'uniform';

RULE_VARYING : 'varying';

RULE_NOPERSPECTIVE : 'noperspective';

RULE_FLAT : 'flat';

RULE_SMOOTH : 'smooth';

RULE_LAYOUT : 'layout';

RULE_MAT2X2 : 'mat2x2';

RULE_MAT2X3 : 'mat2x3';

RULE_MAT2X4 : 'mat2x4';

RULE_MAT3X2 : 'mat3x2';

RULE_MAT3X3 : 'mat3x3';

RULE_MAT3X4 : 'mat3x4';

RULE_MAT4X2 : 'mat4x2';

RULE_MAT4X3 : 'mat4x3';

RULE_MAT4X4 : 'mat4x4';

RULE_STRUCT : 'struct';

RULE_VOID : 'void';

RULE_WHILE : 'while';

RULE_TYPE_NAME : 'WTF IS THIS?';

RULE_FLOATCONSTANT : ('0'..'9')* '.' ('0'..'9')+;

RULE_INTCONSTANT : ('0'..'9')+;

RULE_UINTCONSTANT : ('0'..'9')+ ('u'|'U');

RULE_BOOLCONSTANT : ('true'|'false');

RULE_FIELD_SELECTION : 'what is this?';

RULE_LEFT_OP : '<<';

RULE_RIGHT_OP : '>>';

RULE_INC_OP : '++';

RULE_DEC_OP : '--';

RULE_AND_OP : '&&';

RULE_OR_OP : '||';

RULE_XOR_OP : '^???';

RULE_MUL_ASSIGN : '*=';

RULE_DIV_ASSIGN : '/=';

RULE_ADD_ASSIGN : '+=';

RULE_MOD_ASSIGN : '%=';

RULE_LEFT_ASSIGN : '??';

RULE_RIGHT_ASSIGN : '??ASDF';

RULE_AND_ASSIGN : '&=';

RULE_XOR_ASSIGN : '^=';

RULE_OR_ASSIGN : '|=';

RULE_SUB_ASSIGN : '-=';

RULE_LEFT_BRACKET : '[';

RULE_RIGHT_BRACKET : ']';

RULE_LEFT_BRACE : '{';

RULE_RIGHT_BRACE : '}';

RULE_COLON : ':';

RULE_SEMICOLON : ';';

RULE_BANG : '!';

RULE_PLUS : '+';

RULE_DASH : '-';

RULE_TILDE : '~';

RULE_STAR : '*';

RULE_SLASH : '/';

RULE_PERCENT : '%';

RULE_VERTICAL_BAR : '|';

RULE_CARET : '^';

RULE_AMPERSAND : '&';

RULE_QUESTION : '?';

RULE_INVARIANT : 'invariant';

RULE_HIGH_PRECISION : 'high';

RULE_MEDIUM_PRECISION : 'medium';

RULE_LOW_PRECISION : 'low';

RULE_PRECISION : 'precision';

RULE_IDENTIFIER : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_PRECOMPILER_STATEMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_NL : '\r'? '\n';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


