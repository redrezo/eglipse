/*
* generated by Xtext
*/
grammar InternalGlsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package at.caks.eglipse.lang.glsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package at.caks.eglipse.lang.glsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import at.caks.eglipse.lang.glsl.services.GlslGrammarAccess;

}

@parser::members {

 	private GlslGrammarAccess grammarAccess;
 	
    public InternalGlslParser(TokenStream input, GlslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "SourceFile";	
   	}
   	
   	@Override
   	protected GlslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSourceFile
entryRuleSourceFile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSourceFileRule()); }
	 iv_ruleSourceFile=ruleSourceFile 
	 { $current=$iv_ruleSourceFile.current; } 
	 EOF 
;

// Rule SourceFile
ruleSourceFile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSourceFileAccess().getPrePrecompilerStatementParserRuleCall_0_0()); 
	    }
		lv_pre_0_0=rulePrecompilerStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSourceFileRule());
	        }
       		add(
       			$current, 
       			"pre",
        		lv_pre_0_0, 
        		"PrecompilerStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)*(((
(
		{ 
	        newCompositeNode(grammarAccess.getSourceFileAccess().getUniformsUniformDeclarationParserRuleCall_1_0_0_0()); 
	    }
		lv_uniforms_1_0=ruleUniformDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSourceFileRule());
	        }
       		add(
       			$current, 
       			"uniforms",
        		lv_uniforms_1_0, 
        		"UniformDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_2=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_2, grammarAccess.getSourceFileAccess().getSEMICOLONTerminalRuleCall_1_0_1()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getSourceFileAccess().getAttribsAttributeDeclarationParserRuleCall_1_1_0_0()); 
	    }
		lv_attribs_3_0=ruleAttributeDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSourceFileRule());
	        }
       		add(
       			$current, 
       			"attribs",
        		lv_attribs_3_0, 
        		"AttributeDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_4=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_4, grammarAccess.getSourceFileAccess().getSEMICOLONTerminalRuleCall_1_1_1()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getSourceFileAccess().getPrototypesFunctionPrototypeParserRuleCall_1_2_0_0()); 
	    }
		lv_prototypes_5_0=ruleFunctionPrototype		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSourceFileRule());
	        }
       		add(
       			$current, 
       			"prototypes",
        		lv_prototypes_5_0, 
        		"FunctionPrototype");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_6=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_6, grammarAccess.getSourceFileAccess().getSEMICOLONTerminalRuleCall_1_2_1()); 
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSourceFileAccess().getFunctionsFunctionDefinitionParserRuleCall_1_3_0()); 
	    }
		lv_functions_7_0=ruleFunctionDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSourceFileRule());
	        }
       		add(
       			$current, 
       			"functions",
        		lv_functions_7_0, 
        		"FunctionDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getSourceFileAccess().getVariablesVariableDeclarationParserRuleCall_1_4_0_0()); 
	    }
		lv_variables_8_0=ruleVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSourceFileRule());
	        }
       		add(
       			$current, 
       			"variables",
        		lv_variables_8_0, 
        		"VariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_9=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_9, grammarAccess.getSourceFileAccess().getSEMICOLONTerminalRuleCall_1_4_1()); 
    }
))*)
;





// Entry rule entryRulePrecompilerStatement
entryRulePrecompilerStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrecompilerStatementRule()); }
	 iv_rulePrecompilerStatement=rulePrecompilerStatement 
	 { $current=$iv_rulePrecompilerStatement.current; } 
	 EOF 
;

// Rule PrecompilerStatement
rulePrecompilerStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getPrecompilerStatementAccess().getPrecompilerVersionParserRuleCall()); 
    }
    this_PrecompilerVersion_0=rulePrecompilerVersion
    { 
        $current = $this_PrecompilerVersion_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRulePrecompilerVersion
entryRulePrecompilerVersion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrecompilerVersionRule()); }
	 iv_rulePrecompilerVersion=rulePrecompilerVersion 
	 { $current=$iv_rulePrecompilerVersion.current; } 
	 EOF 
;

// Rule PrecompilerVersion
rulePrecompilerVersion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#version' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrecompilerVersionAccess().getVersionKeyword_0());
    }
(
(
		lv_version_1_0=RULE_INTCONSTANT
		{
			newLeafNode(lv_version_1_0, grammarAccess.getPrecompilerVersionAccess().getVersionINTCONSTANTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecompilerVersionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"version",
        		lv_version_1_0, 
        		"INTCONSTANT");
	    }

)
)(
(
		lv_profile_2_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_profile_2_0, grammarAccess.getPrecompilerVersionAccess().getProfileIDENTIFIERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecompilerVersionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"profile",
        		lv_profile_2_0, 
        		"IDENTIFIER");
	    }

)
)?)
;





// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	 iv_ruleDeclaration=ruleDeclaration 
	 { $current=$iv_ruleDeclaration.current; } 
	 EOF 
;

// Rule Declaration
ruleDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getUniformDeclarationParserRuleCall_0_0()); 
    }
    this_UniformDeclaration_0=ruleUniformDeclaration
    { 
        $current = $this_UniformDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
this_SEMICOLON_1=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_1, grammarAccess.getDeclarationAccess().getSEMICOLONTerminalRuleCall_0_1()); 
    }
)
    |(
    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getAttributeDeclarationParserRuleCall_1_0()); 
    }
    this_AttributeDeclaration_2=ruleAttributeDeclaration
    { 
        $current = $this_AttributeDeclaration_2.current; 
        afterParserOrEnumRuleCall();
    }
this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getDeclarationAccess().getSEMICOLONTerminalRuleCall_1_1()); 
    }
)
    |(
    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getFunctionPrototypeParserRuleCall_2_0()); 
    }
    this_FunctionPrototype_4=ruleFunctionPrototype
    { 
        $current = $this_FunctionPrototype_4.current; 
        afterParserOrEnumRuleCall();
    }
this_SEMICOLON_5=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getDeclarationAccess().getSEMICOLONTerminalRuleCall_2_1()); 
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getVariableDeclarationParserRuleCall_3()); 
    }
    this_VariableDeclaration_6=ruleVariableDeclaration
    { 
        $current = $this_VariableDeclaration_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getFunctionDefinitionParserRuleCall_4()); 
    }
    this_FunctionDefinition_7=ruleFunctionDefinition
    { 
        $current = $this_FunctionDefinition_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;









// Entry rule entryRuleUniformDeclaration
entryRuleUniformDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUniformDeclarationRule()); }
	 iv_ruleUniformDeclaration=ruleUniformDeclaration 
	 { $current=$iv_ruleUniformDeclaration.current; } 
	 EOF 
;

// Rule UniformDeclaration
ruleUniformDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUniformDeclarationAccess().getUniformDeclarationAction_0(),
            $current);
    }
)(
(
		lv_qualifier_1_0=RULE_UNIFORM
		{
			newLeafNode(lv_qualifier_1_0, grammarAccess.getUniformDeclarationAccess().getQualifierUNIFORMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUniformDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"qualifier",
        		lv_qualifier_1_0, 
        		"UNIFORM");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUniformDeclarationAccess().getTypeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUniformDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_3_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_name_3_0, grammarAccess.getUniformDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUniformDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"IDENTIFIER");
	    }

)
))
;





// Entry rule entryRuleAttributeDeclaration
entryRuleAttributeDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeDeclarationRule()); }
	 iv_ruleAttributeDeclaration=ruleAttributeDeclaration 
	 { $current=$iv_ruleAttributeDeclaration.current; } 
	 EOF 
;

// Rule AttributeDeclaration
ruleAttributeDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeDeclarationAccess().getInAttributeDeclarationAction_0_0(),
            $current);
    }
)(
(
		lv_qualifier_1_0=RULE_IN
		{
			newLeafNode(lv_qualifier_1_0, grammarAccess.getAttributeDeclarationAccess().getQualifierINTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"qualifier",
        		lv_qualifier_1_0, 
        		"IN");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeDeclarationAccess().getTypeTypeParserRuleCall_0_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_3_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_name_3_0, grammarAccess.getAttributeDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"IDENTIFIER");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeDeclarationAccess().getOutAttributeDeclarationAction_1_0(),
            $current);
    }
)(
(
		lv_qualifier_5_0=RULE_OUT
		{
			newLeafNode(lv_qualifier_5_0, grammarAccess.getAttributeDeclarationAccess().getQualifierOUTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"qualifier",
        		lv_qualifier_5_0, 
        		"OUT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeDeclarationAccess().getTypeTypeParserRuleCall_1_2_0()); 
	    }
		lv_type_6_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_6_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_7_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_name_7_0, grammarAccess.getAttributeDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"IDENTIFIER");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeDeclarationAccess().getInOutAttributeDeclarationAction_2_0(),
            $current);
    }
)(
(
		lv_qualifier_9_0=RULE_INOUT
		{
			newLeafNode(lv_qualifier_9_0, grammarAccess.getAttributeDeclarationAccess().getQualifierINOUTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"qualifier",
        		lv_qualifier_9_0, 
        		"INOUT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeDeclarationAccess().getTypeTypeParserRuleCall_2_2_0()); 
	    }
		lv_type_10_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_10_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_11_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_name_11_0, grammarAccess.getAttributeDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_2_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_11_0, 
        		"IDENTIFIER");
	    }

)
)))
;





// Entry rule entryRuleFunctionPrototype
entryRuleFunctionPrototype returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionPrototypeRule()); }
	 iv_ruleFunctionPrototype=ruleFunctionPrototype 
	 { $current=$iv_ruleFunctionPrototype.current; } 
	 EOF 
;

// Rule FunctionPrototype
ruleFunctionPrototype returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionPrototypeAccess().getTypeTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionPrototypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFunctionPrototypeAccess().getNameIDENTIFIERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionPrototypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"IDENTIFIER");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFunctionPrototypeAccess().getLeftParenthesisKeyword_2());
    }
((this_VOID_3=RULE_VOID
    { 
    newLeafNode(this_VOID_3, grammarAccess.getFunctionPrototypeAccess().getVOIDTerminalRuleCall_3_0()); 
    }
)?
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionPrototypeAccess().getParamsParameterParserRuleCall_3_1_0_0()); 
	    }
		lv_params_4_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionPrototypeRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFunctionPrototypeAccess().getCommaKeyword_3_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionPrototypeAccess().getParamsParameterParserRuleCall_3_1_1_1_0()); 
	    }
		lv_params_6_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionPrototypeRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_6_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*))	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFunctionPrototypeAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_name_1_0, grammarAccess.getParameterAccess().getNameIDENTIFIERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"IDENTIFIER");
	    }

)
))
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getScalarTypeParserRuleCall_0()); 
    }
    this_ScalarType_0=ruleScalarType
    { 
        $current = $this_ScalarType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getComplexTypeParserRuleCall_1()); 
    }
    this_ComplexType_1=ruleComplexType
    { 
        $current = $this_ComplexType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeAccess().getVoidTypeAction_2_0(),
            $current);
    }
)(
(
		lv_name_3_0=RULE_VOID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getTypeAccess().getNameVOIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"VOID");
	    }

)
)))
;





// Entry rule entryRuleScalarType
entryRuleScalarType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScalarTypeRule()); }
	 iv_ruleScalarType=ruleScalarType 
	 { $current=$iv_ruleScalarType.current; } 
	 EOF 
;

// Rule ScalarType
ruleScalarType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getScalarTypeAccess().getIntTypeAction_0_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_INTX
		{
			newLeafNode(lv_name_1_0, grammarAccess.getScalarTypeAccess().getNameINTXTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScalarTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"INTX");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getScalarTypeAccess().getUIntTypeAction_1_0(),
            $current);
    }
)(
(
		lv_name_3_0=RULE_UINT
		{
			newLeafNode(lv_name_3_0, grammarAccess.getScalarTypeAccess().getNameUINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScalarTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"UINT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getScalarTypeAccess().getBoolTypeAction_2_0(),
            $current);
    }
)(
(
		lv_name_5_0=RULE_BOOL
		{
			newLeafNode(lv_name_5_0, grammarAccess.getScalarTypeAccess().getNameBOOLTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScalarTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"BOOL");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getScalarTypeAccess().getFloatTypeAction_3_0(),
            $current);
    }
)(
(
		lv_name_7_0=RULE_FLOAT
		{
			newLeafNode(lv_name_7_0, grammarAccess.getScalarTypeAccess().getNameFLOATTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScalarTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"FLOAT");
	    }

)
)))
;





// Entry rule entryRuleComplexType
entryRuleComplexType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComplexTypeRule()); }
	 iv_ruleComplexType=ruleComplexType 
	 { $current=$iv_ruleComplexType.current; } 
	 EOF 
;

// Rule ComplexType
ruleComplexType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getComplexTypeAccess().getVecTypeParserRuleCall_0()); 
    }
    this_VecType_0=ruleVecType
    { 
        $current = $this_VecType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getComplexTypeAccess().getMatTypeParserRuleCall_1()); 
    }
    this_MatType_1=ruleMatType
    { 
        $current = $this_MatType_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleVecType
entryRuleVecType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVecTypeRule()); }
	 iv_ruleVecType=ruleVecType 
	 { $current=$iv_ruleVecType.current; } 
	 EOF 
;

// Rule VecType
ruleVecType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVecTypeAccess().getVec2TypeAction_0_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_VEC2
		{
			newLeafNode(lv_name_1_0, grammarAccess.getVecTypeAccess().getNameVEC2TerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVecTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"VEC2");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVecTypeAccess().getVec3TypeAction_1_0(),
            $current);
    }
)(
(
		lv_name_3_0=RULE_VEC3
		{
			newLeafNode(lv_name_3_0, grammarAccess.getVecTypeAccess().getNameVEC3TerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVecTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"VEC3");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVecTypeAccess().getVec4TypeAction_2_0(),
            $current);
    }
)(
(
		lv_name_5_0=RULE_VEC4
		{
			newLeafNode(lv_name_5_0, grammarAccess.getVecTypeAccess().getNameVEC4TerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVecTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"VEC4");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVecTypeAccess().getIVec2TypeAction_3_0(),
            $current);
    }
)(
(
		lv_name_7_0=RULE_IVEC2
		{
			newLeafNode(lv_name_7_0, grammarAccess.getVecTypeAccess().getNameIVEC2TerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVecTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"IVEC2");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVecTypeAccess().getIVec3TypeAction_4_0(),
            $current);
    }
)(
(
		lv_name_9_0=RULE_IVEC3
		{
			newLeafNode(lv_name_9_0, grammarAccess.getVecTypeAccess().getNameIVEC3TerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVecTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"IVEC3");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVecTypeAccess().getIVec4TypeAction_5_0(),
            $current);
    }
)(
(
		lv_name_11_0=RULE_IVEC4
		{
			newLeafNode(lv_name_11_0, grammarAccess.getVecTypeAccess().getNameIVEC4TerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVecTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_11_0, 
        		"IVEC4");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVecTypeAccess().getUVec2TypeAction_6_0(),
            $current);
    }
)(
(
		lv_name_13_0=RULE_UVEC2
		{
			newLeafNode(lv_name_13_0, grammarAccess.getVecTypeAccess().getNameUVEC2TerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVecTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_13_0, 
        		"UVEC2");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVecTypeAccess().getUVec3TypeAction_7_0(),
            $current);
    }
)(
(
		lv_name_15_0=RULE_UVEC3
		{
			newLeafNode(lv_name_15_0, grammarAccess.getVecTypeAccess().getNameUVEC3TerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVecTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_15_0, 
        		"UVEC3");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVecTypeAccess().getUVec4TypeAction_8_0(),
            $current);
    }
)(
(
		lv_name_17_0=RULE_UVEC4
		{
			newLeafNode(lv_name_17_0, grammarAccess.getVecTypeAccess().getNameUVEC4TerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVecTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_17_0, 
        		"UVEC4");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVecTypeAccess().getBVec2TypeAction_9_0(),
            $current);
    }
)(
(
		lv_name_19_0=RULE_BVEC2
		{
			newLeafNode(lv_name_19_0, grammarAccess.getVecTypeAccess().getNameBVEC2TerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVecTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_19_0, 
        		"BVEC2");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVecTypeAccess().getBVec3TypeAction_10_0(),
            $current);
    }
)(
(
		lv_name_21_0=RULE_BVEC3
		{
			newLeafNode(lv_name_21_0, grammarAccess.getVecTypeAccess().getNameBVEC3TerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVecTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_21_0, 
        		"BVEC3");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVecTypeAccess().getBVec4TypeAction_11_0(),
            $current);
    }
)(
(
		lv_name_23_0=RULE_BVEC4
		{
			newLeafNode(lv_name_23_0, grammarAccess.getVecTypeAccess().getNameBVEC4TerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVecTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_23_0, 
        		"BVEC4");
	    }

)
)))
;





// Entry rule entryRuleMatType
entryRuleMatType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatTypeRule()); }
	 iv_ruleMatType=ruleMatType 
	 { $current=$iv_ruleMatType.current; } 
	 EOF 
;

// Rule MatType
ruleMatType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMatTypeAccess().getMat2TypeAction_0_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_MAT2
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMatTypeAccess().getNameMAT2TerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"MAT2");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMatTypeAccess().getMat3TypeAction_1_0(),
            $current);
    }
)(
(
		lv_name_3_0=RULE_MAT3
		{
			newLeafNode(lv_name_3_0, grammarAccess.getMatTypeAccess().getNameMAT3TerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"MAT3");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMatTypeAccess().getMat4TypeAction_2_0(),
            $current);
    }
)(
(
		lv_name_5_0=RULE_MAT4
		{
			newLeafNode(lv_name_5_0, grammarAccess.getMatTypeAccess().getNameMAT4TerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"MAT4");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMatTypeAccess().getMat2x2TypeAction_3_0(),
            $current);
    }
)(
(
		lv_name_7_0=RULE_MAT2X2
		{
			newLeafNode(lv_name_7_0, grammarAccess.getMatTypeAccess().getNameMAT2X2TerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"MAT2X2");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMatTypeAccess().getMat2x3TypeAction_4_0(),
            $current);
    }
)(
(
		lv_name_9_0=RULE_MAT2X3
		{
			newLeafNode(lv_name_9_0, grammarAccess.getMatTypeAccess().getNameMAT2X3TerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"MAT2X3");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMatTypeAccess().getMat2x4TypeAction_5_0(),
            $current);
    }
)(
(
		lv_name_11_0=RULE_MAT2X4
		{
			newLeafNode(lv_name_11_0, grammarAccess.getMatTypeAccess().getNameMAT2X4TerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_11_0, 
        		"MAT2X4");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMatTypeAccess().getMat3x2TypeAction_6_0(),
            $current);
    }
)(
(
		lv_name_13_0=RULE_MAT3X2
		{
			newLeafNode(lv_name_13_0, grammarAccess.getMatTypeAccess().getNameMAT3X2TerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_13_0, 
        		"MAT3X2");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMatTypeAccess().getMat3x3TypeAction_7_0(),
            $current);
    }
)(
(
		lv_name_15_0=RULE_MAT3X3
		{
			newLeafNode(lv_name_15_0, grammarAccess.getMatTypeAccess().getNameMAT3X3TerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_15_0, 
        		"MAT3X3");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMatTypeAccess().getMat3x4TypeAction_8_0(),
            $current);
    }
)(
(
		lv_name_17_0=RULE_MAT3X4
		{
			newLeafNode(lv_name_17_0, grammarAccess.getMatTypeAccess().getNameMAT3X4TerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_17_0, 
        		"MAT3X4");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMatTypeAccess().getMat4x2TypeAction_9_0(),
            $current);
    }
)(
(
		lv_name_19_0=RULE_MAT4X2
		{
			newLeafNode(lv_name_19_0, grammarAccess.getMatTypeAccess().getNameMAT4X2TerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_19_0, 
        		"MAT4X2");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMatTypeAccess().getMat4x3TypeAction_10_0(),
            $current);
    }
)(
(
		lv_name_21_0=RULE_MAT4X3
		{
			newLeafNode(lv_name_21_0, grammarAccess.getMatTypeAccess().getNameMAT4X3TerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_21_0, 
        		"MAT4X3");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMatTypeAccess().getMat4x4TypeAction_11_0(),
            $current);
    }
)(
(
		lv_name_23_0=RULE_MAT4X4
		{
			newLeafNode(lv_name_23_0, grammarAccess.getMatTypeAccess().getNameMAT4X4TerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_23_0, 
        		"MAT4X4");
	    }

)
)))
;





// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionDefinitionRule()); }
	 iv_ruleFunctionDefinition=ruleFunctionDefinition 
	 { $current=$iv_ruleFunctionDefinition.current; } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getFunctionPrototypeParserRuleCall_0()); 
    }
    this_FunctionPrototype_0=ruleFunctionPrototype
    { 
        $current = $this_FunctionPrototype_0.current; 
        afterParserOrEnumRuleCall();
    }
this_LEFT_BRACE_1=RULE_LEFT_BRACE
    { 
    newLeafNode(this_LEFT_BRACE_1, grammarAccess.getFunctionDefinitionAccess().getLEFT_BRACETerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getStatementsStatementParserRuleCall_2_0()); 
	    }
		lv_statements_2_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_2_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_RIGHT_BRACE_3=RULE_RIGHT_BRACE
    { 
    newLeafNode(this_RIGHT_BRACE_3, grammarAccess.getFunctionDefinitionAccess().getRIGHT_BRACETerminalRuleCall_3()); 
    }
)
;







// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_ruleStatement=ruleStatement 
	 { $current=$iv_ruleStatement.current; } 
	 EOF 
;

// Rule Statement
ruleStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getBlockStatementParserRuleCall_0()); 
    }
    this_BlockStatement_0=ruleBlockStatement
    { 
        $current = $this_BlockStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getVariableDeclarationParserRuleCall_1()); 
    }
    this_VariableDeclaration_1=ruleVariableDeclaration
    { 
        $current = $this_VariableDeclaration_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getAssignmentStatementParserRuleCall_2()); 
    }
    this_AssignmentStatement_2=ruleAssignmentStatement
    { 
        $current = $this_AssignmentStatement_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getJumpStatementParserRuleCall_3()); 
    }
    this_JumpStatement_3=ruleJumpStatement
    { 
        $current = $this_JumpStatement_3.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStatementAccess().getSymbolRefAction_4_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStatementRule());
	        }
        }
	otherlv_5=RULE_IDENTIFIER
	{
		newLeafNode(otherlv_5, grammarAccess.getStatementAccess().getSymbolSymbolCrossReference_4_1_0()); 
	}

)
)(	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStatementAccess().getLeftParenthesisKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getActualsExpParserRuleCall_4_2_1_0()); 
	    }
		lv_actuals_7_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		add(
       			$current, 
       			"actuals",
        		lv_actuals_7_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStatementAccess().getCommaKeyword_4_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getActualsExpParserRuleCall_4_2_2_1_0()); 
	    }
		lv_actuals_9_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		add(
       			$current, 
       			"actuals",
        		lv_actuals_9_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStatementAccess().getRightParenthesisKeyword_4_2_3());
    }
)?this_SEMICOLON_11=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_11, grammarAccess.getStatementAccess().getSEMICOLONTerminalRuleCall_4_3()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStatementAccess().getIfStatementAction_5_0(),
            $current);
    }
)this_IF_13=RULE_IF
    { 
    newLeafNode(this_IF_13, grammarAccess.getStatementAccess().getIFTerminalRuleCall_5_1()); 
    }
	otherlv_14='(' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getStatementAccess().getLeftParenthesisKeyword_5_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getConditionExpParserRuleCall_5_3_0()); 
	    }
		lv_condition_15_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_15_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_16=')' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getStatementAccess().getRightParenthesisKeyword_5_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getThenStatementParserRuleCall_5_5_0()); 
	    }
		lv_then_17_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_17_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	RULE_ELSE)=>this_ELSE_18=RULE_ELSE
    { 
    newLeafNode(this_ELSE_18, grammarAccess.getStatementAccess().getELSETerminalRuleCall_5_6_0()); 
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getElseStatementParserRuleCall_5_6_1_0()); 
	    }
		lv_else_19_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_19_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStatementAccess().getWhileStatementAction_6_0(),
            $current);
    }
)this_WHILE_21=RULE_WHILE
    { 
    newLeafNode(this_WHILE_21, grammarAccess.getStatementAccess().getWHILETerminalRuleCall_6_1()); 
    }
	otherlv_22='(' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getStatementAccess().getLeftParenthesisKeyword_6_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getConditionExpParserRuleCall_6_3_0()); 
	    }
		lv_condition_23_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_23_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_24=')' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getStatementAccess().getRightParenthesisKeyword_6_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_6_5_0()); 
	    }
		lv_do_25_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"do",
        		lv_do_25_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStatementAccess().getWhileStatementAction_7_0(),
            $current);
    }
)this_DO_27=RULE_DO
    { 
    newLeafNode(this_DO_27, grammarAccess.getStatementAccess().getDOTerminalRuleCall_7_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getDoBlockStatementParserRuleCall_7_2_0()); 
	    }
		lv_do_28_0=ruleBlockStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"do",
        		lv_do_28_0, 
        		"BlockStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)this_WHILE_29=RULE_WHILE
    { 
    newLeafNode(this_WHILE_29, grammarAccess.getStatementAccess().getWHILETerminalRuleCall_7_3()); 
    }
	otherlv_30='(' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getStatementAccess().getLeftParenthesisKeyword_7_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getConditionExpParserRuleCall_7_5_0()); 
	    }
		lv_condition_31_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_31_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_32=')' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getStatementAccess().getRightParenthesisKeyword_7_6());
    }
this_SEMICOLON_33=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_33, grammarAccess.getStatementAccess().getSEMICOLONTerminalRuleCall_7_7()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStatementAccess().getForStatementAction_8_0(),
            $current);
    }
)this_FOR_35=RULE_FOR
    { 
    newLeafNode(this_FOR_35, grammarAccess.getStatementAccess().getFORTerminalRuleCall_8_1()); 
    }
	otherlv_36='(' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getStatementAccess().getLeftParenthesisKeyword_8_2());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getAExpParserRuleCall_8_3_0_0()); 
	    }
		lv_a_37_1=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"a",
        		lv_a_37_1, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getADeclarationParserRuleCall_8_3_0_1()); 
	    }
		lv_a_37_2=ruleDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"a",
        		lv_a_37_2, 
        		"Declaration");
	        afterParserOrEnumRuleCall();
	    }

)

)
)this_SEMICOLON_38=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_38, grammarAccess.getStatementAccess().getSEMICOLONTerminalRuleCall_8_4()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getBExpParserRuleCall_8_5_0()); 
	    }
		lv_b_39_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"b",
        		lv_b_39_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)?this_SEMICOLON_40=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_40, grammarAccess.getStatementAccess().getSEMICOLONTerminalRuleCall_8_6()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getCExpParserRuleCall_8_7_0()); 
	    }
		lv_c_41_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"c",
        		lv_c_41_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_42=')' 
    {
    	newLeafNode(otherlv_42, grammarAccess.getStatementAccess().getRightParenthesisKeyword_8_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_8_9_0()); 
	    }
		lv_do_43_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"do",
        		lv_do_43_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStatementAccess().getSwitchStatementAction_9_0(),
            $current);
    }
)this_SWITCH_45=RULE_SWITCH
    { 
    newLeafNode(this_SWITCH_45, grammarAccess.getStatementAccess().getSWITCHTerminalRuleCall_9_1()); 
    }
	otherlv_46='(' 
    {
    	newLeafNode(otherlv_46, grammarAccess.getStatementAccess().getLeftParenthesisKeyword_9_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getAExpParserRuleCall_9_3_0()); 
	    }
		lv_a_47_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"a",
        		lv_a_47_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_48=')' 
    {
    	newLeafNode(otherlv_48, grammarAccess.getStatementAccess().getRightParenthesisKeyword_9_4());
    }
this_LEFT_BRACE_49=RULE_LEFT_BRACE
    { 
    newLeafNode(this_LEFT_BRACE_49, grammarAccess.getStatementAccess().getLEFT_BRACETerminalRuleCall_9_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getCasesSwitchCaseParserRuleCall_9_6_0()); 
	    }
		lv_cases_50_0=ruleSwitchCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_50_0, 
        		"SwitchCase");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RIGHT_BRACE_51=RULE_RIGHT_BRACE
    { 
    newLeafNode(this_RIGHT_BRACE_51, grammarAccess.getStatementAccess().getRIGHT_BRACETerminalRuleCall_9_7()); 
    }
))
;





// Entry rule entryRuleSwitchCase
entryRuleSwitchCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchCaseRule()); }
	 iv_ruleSwitchCase=ruleSwitchCase 
	 { $current=$iv_ruleSwitchCase.current; } 
	 EOF 
;

// Rule SwitchCase
ruleSwitchCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_CASE_0=RULE_CASE
    { 
    newLeafNode(this_CASE_0, grammarAccess.getSwitchCaseAccess().getCASETerminalRuleCall_0_0()); 
    }
((
(
		lv_case_1_0=RULE_INTCONSTANT
		{
			newLeafNode(lv_case_1_0, grammarAccess.getSwitchCaseAccess().getCaseINTCONSTANTTerminalRuleCall_0_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSwitchCaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_1_0, 
        		"INTCONSTANT");
	    }

)
)
    |(
(
		lv_case_2_0=RULE_UINTCONSTANT
		{
			newLeafNode(lv_case_2_0, grammarAccess.getSwitchCaseAccess().getCaseUINTCONSTANTTerminalRuleCall_0_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSwitchCaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_2_0, 
        		"UINTCONSTANT");
	    }

)
)
    |(
(
		lv_fcase_3_0=RULE_FLOATCONSTANT
		{
			newLeafNode(lv_fcase_3_0, grammarAccess.getSwitchCaseAccess().getFcaseFLOATCONSTANTTerminalRuleCall_0_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSwitchCaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fcase",
        		lv_fcase_3_0, 
        		"FLOATCONSTANT");
	    }

)
))this_COLON_4=RULE_COLON
    { 
    newLeafNode(this_COLON_4, grammarAccess.getSwitchCaseAccess().getCOLONTerminalRuleCall_0_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchCaseAccess().getThenStatementParserRuleCall_0_3_0()); 
	    }
		lv_then_5_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchCaseRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_5_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_DEFAULT_6=RULE_DEFAULT
    { 
    newLeafNode(this_DEFAULT_6, grammarAccess.getSwitchCaseAccess().getDEFAULTTerminalRuleCall_1_0()); 
    }
this_COLON_7=RULE_COLON
    { 
    newLeafNode(this_COLON_7, grammarAccess.getSwitchCaseAccess().getCOLONTerminalRuleCall_1_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchCaseAccess().getThenStatementParserRuleCall_1_2_0()); 
	    }
		lv_then_8_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchCaseRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_8_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleBlockStatement
entryRuleBlockStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockStatementRule()); }
	 iv_ruleBlockStatement=ruleBlockStatement 
	 { $current=$iv_ruleBlockStatement.current; } 
	 EOF 
;

// Rule BlockStatement
ruleBlockStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_LEFT_BRACE_0=RULE_LEFT_BRACE
    { 
    newLeafNode(this_LEFT_BRACE_0, grammarAccess.getBlockStatementAccess().getLEFT_BRACETerminalRuleCall_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockStatementAccess().getStatementsStatementParserRuleCall_1_0()); 
	    }
		lv_statements_1_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockStatementRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_1_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_RIGHT_BRACE_2=RULE_RIGHT_BRACE
    { 
    newLeafNode(this_RIGHT_BRACE_2, grammarAccess.getBlockStatementAccess().getRIGHT_BRACETerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleJumpStatement
entryRuleJumpStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJumpStatementRule()); }
	 iv_ruleJumpStatement=ruleJumpStatement 
	 { $current=$iv_ruleJumpStatement.current; } 
	 EOF 
;

// Rule JumpStatement
ruleJumpStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_CONTINUE_0=RULE_CONTINUE
    { 
    newLeafNode(this_CONTINUE_0, grammarAccess.getJumpStatementAccess().getCONTINUETerminalRuleCall_0_0()); 
    }
this_SEMICOLON_1=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_1, grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_0_1()); 
    }
)
    |(this_BREAK_2=RULE_BREAK
    { 
    newLeafNode(this_BREAK_2, grammarAccess.getJumpStatementAccess().getBREAKTerminalRuleCall_1_0()); 
    }
this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_1_1()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getJumpStatementAccess().getReturnAction_2_0(),
            $current);
    }
)this_RETURN_5=RULE_RETURN
    { 
    newLeafNode(this_RETURN_5, grammarAccess.getJumpStatementAccess().getRETURNTerminalRuleCall_2_1()); 
    }
this_SEMICOLON_6=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_6, grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_2_2()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getJumpStatementAccess().getReturnAction_3_0(),
            $current);
    }
)this_RETURN_8=RULE_RETURN
    { 
    newLeafNode(this_RETURN_8, grammarAccess.getJumpStatementAccess().getRETURNTerminalRuleCall_3_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJumpStatementAccess().getValueExpParserRuleCall_3_2_0()); 
	    }
		lv_value_9_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJumpStatementRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_9_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_10=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_10, grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_3_3()); 
    }
)
    |(this_DISCARD_11=RULE_DISCARD
    { 
    newLeafNode(this_DISCARD_11, grammarAccess.getJumpStatementAccess().getDISCARDTerminalRuleCall_4_0()); 
    }
this_SEMICOLON_12=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_12, grammarAccess.getJumpStatementAccess().getSEMICOLONTerminalRuleCall_4_1()); 
    }
))
;





// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableDeclarationRule()); }
	 iv_ruleVariableDeclaration=ruleVariableDeclaration 
	 { $current=$iv_ruleVariableDeclaration.current; } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_name_1_0, grammarAccess.getVariableDeclarationAccess().getNameIDENTIFIERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"IDENTIFIER");
	    }

)
)(	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getInitExpParserRuleCall_2_1_0()); 
	    }
		lv_init_3_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"init",
        		lv_init_3_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))?this_SEMICOLON_4=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_4, grammarAccess.getVariableDeclarationAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleAssignmentStatement
entryRuleAssignmentStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentStatementRule()); }
	 iv_ruleAssignmentStatement=ruleAssignmentStatement 
	 { $current=$iv_ruleAssignmentStatement.current; } 
	 EOF 
;

// Rule AssignmentStatement
ruleAssignmentStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentStatementRule());
	        }
        }
	otherlv_0=RULE_IDENTIFIER
	{
		newLeafNode(otherlv_0, grammarAccess.getAssignmentStatementAccess().getVariableSymbolCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAssignmentStatementAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentStatementAccess().getRightExpParserRuleCall_2_0()); 
	    }
		lv_right_2_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentStatementRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_2_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getAssignmentStatementAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleExp
entryRuleExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpRule()); }
	 iv_ruleExp=ruleExp 
	 { $current=$iv_ruleExp.current; } 
	 EOF 
;

// Rule Exp
ruleExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpAccess().getLogicExpParserRuleCall_0()); 
    }
    this_LogicExp_0=ruleLogicExp
    { 
        $current = $this_LogicExp_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpAccess().getInlineIfExpConditionAction_1_0(),
            $current);
    }
)((	RULE_QUESTION)=>this_QUESTION_2=RULE_QUESTION
    { 
    newLeafNode(this_QUESTION_2, grammarAccess.getExpAccess().getQUESTIONTerminalRuleCall_1_1()); 
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getThenExpParserRuleCall_1_2_0()); 
	    }
		lv_then_3_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_3_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)this_COLON_4=RULE_COLON
    { 
    newLeafNode(this_COLON_4, grammarAccess.getExpAccess().getCOLONTerminalRuleCall_1_3()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getElseExpParserRuleCall_1_4_0()); 
	    }
		lv_else_5_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_5_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleLogicExp
entryRuleLogicExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicExpRule()); }
	 iv_ruleLogicExp=ruleLogicExp 
	 { $current=$iv_ruleLogicExp.current; } 
	 EOF 
;

// Rule LogicExp
ruleLogicExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLogicExpAccess().getAddExpParserRuleCall_0()); 
    }
    this_AddExp_0=ruleAddExp
    { 
        $current = $this_AddExp_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getLogicExpAccess().getLogicExpLeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicExpAccess().getOpLogicOpEnumRuleCall_1_1_0()); 
	    }
		lv_op_2_0=ruleLogicOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicExpRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"LogicOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicExpAccess().getRightAddExpParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleAddExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicExpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"AddExp");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleAddExp
entryRuleAddExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddExpRule()); }
	 iv_ruleAddExp=ruleAddExp 
	 { $current=$iv_ruleAddExp.current; } 
	 EOF 
;

// Rule AddExp
ruleAddExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAddExpAccess().getMulExpParserRuleCall_0()); 
    }
    this_MulExp_0=ruleMulExp
    { 
        $current = $this_MulExp_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAddExpAccess().getAddExpLeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAddExpAccess().getOpAddOpParserRuleCall_1_1_0()); 
	    }
		lv_op_2_0=ruleAddOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddExpRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"AddOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAddExpAccess().getRightMulExpParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleMulExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddExpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"MulExp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAddOp
entryRuleAddOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddOpRule()); } 
	 iv_ruleAddOp=ruleAddOp 
	 { $current=$iv_ruleAddOp.current.getText(); }  
	 EOF 
;

// Rule AddOp
ruleAddOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_PLUS_0=RULE_PLUS    {
		$current.merge(this_PLUS_0);
    }

    { 
    newLeafNode(this_PLUS_0, grammarAccess.getAddOpAccess().getPLUSTerminalRuleCall_0()); 
    }

    |    this_DASH_1=RULE_DASH    {
		$current.merge(this_DASH_1);
    }

    { 
    newLeafNode(this_DASH_1, grammarAccess.getAddOpAccess().getDASHTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleMulExp
entryRuleMulExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMulExpRule()); }
	 iv_ruleMulExp=ruleMulExp 
	 { $current=$iv_ruleMulExp.current; } 
	 EOF 
;

// Rule MulExp
ruleMulExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMulExpAccess().getPostfixExpParserRuleCall_0()); 
    }
    this_PostfixExp_0=rulePostfixExp
    { 
        $current = $this_PostfixExp_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMulExpAccess().getMulExpLeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMulExpAccess().getOpMulOpParserRuleCall_1_1_0()); 
	    }
		lv_op_2_0=ruleMulOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMulExpRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"MulOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMulExpAccess().getRightPostfixExpParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulePostfixExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMulExpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"PostfixExp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMulOp
entryRuleMulOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMulOpRule()); } 
	 iv_ruleMulOp=ruleMulOp 
	 { $current=$iv_ruleMulOp.current.getText(); }  
	 EOF 
;

// Rule MulOp
ruleMulOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STAR_0=RULE_STAR    {
		$current.merge(this_STAR_0);
    }

    { 
    newLeafNode(this_STAR_0, grammarAccess.getMulOpAccess().getSTARTerminalRuleCall_0()); 
    }

    |    this_SLASH_1=RULE_SLASH    {
		$current.merge(this_SLASH_1);
    }

    { 
    newLeafNode(this_SLASH_1, grammarAccess.getMulOpAccess().getSLASHTerminalRuleCall_1()); 
    }

    |    this_PERCENT_2=RULE_PERCENT    {
		$current.merge(this_PERCENT_2);
    }

    { 
    newLeafNode(this_PERCENT_2, grammarAccess.getMulOpAccess().getPERCENTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRulePostfixExp
entryRulePostfixExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPostfixExpRule()); }
	 iv_rulePostfixExp=rulePostfixExp 
	 { $current=$iv_rulePostfixExp.current; } 
	 EOF 
;

// Rule PostfixExp
rulePostfixExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPostfixExpAccess().getSymbolRefAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPostfixExpRule());
	        }
        }
	otherlv_1=RULE_IDENTIFIER
	{
		newLeafNode(otherlv_1, grammarAccess.getPostfixExpAccess().getSymbolSymbolCrossReference_0_1_0()); 
	}

)
)(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPostfixExpAccess().getSymbolRefInvocationSymbolrefAction_0_2_0_0(),
            $current);
    }
)((	'(' 
)=>	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPostfixExpAccess().getLeftParenthesisKeyword_0_2_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpAccess().getActualsExpParserRuleCall_0_2_0_2_0()); 
	    }
		lv_actuals_4_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpRule());
	        }
       		add(
       			$current, 
       			"actuals",
        		lv_actuals_4_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPostfixExpAccess().getCommaKeyword_0_2_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpAccess().getActualsExpParserRuleCall_0_2_0_3_1_0()); 
	    }
		lv_actuals_6_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpRule());
	        }
       		add(
       			$current, 
       			"actuals",
        		lv_actuals_6_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPostfixExpAccess().getRightParenthesisKeyword_0_2_0_4());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPostfixExpAccess().getSymbolRefMemberSymbolrefAction_0_2_1_0(),
            $current);
    }
)((	'.' 
)=>	otherlv_9='.' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPostfixExpAccess().getFullStopKeyword_0_2_1_1());
    }
)(
(
(
		lv_member_10_1=	'x' 
    {
        newLeafNode(lv_member_10_1, grammarAccess.getPostfixExpAccess().getMemberXKeyword_0_2_1_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPostfixExpRule());
	        }
       		setWithLastConsumed($current, "member", lv_member_10_1, null);
	    }

    |		lv_member_10_2=	'y' 
    {
        newLeafNode(lv_member_10_2, grammarAccess.getPostfixExpAccess().getMemberYKeyword_0_2_1_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPostfixExpRule());
	        }
       		setWithLastConsumed($current, "member", lv_member_10_2, null);
	    }

    |		lv_member_10_3=	'z' 
    {
        newLeafNode(lv_member_10_3, grammarAccess.getPostfixExpAccess().getMemberZKeyword_0_2_1_2_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPostfixExpRule());
	        }
       		setWithLastConsumed($current, "member", lv_member_10_3, null);
	    }

    |		lv_member_10_4=	'w' 
    {
        newLeafNode(lv_member_10_4, grammarAccess.getPostfixExpAccess().getMemberWKeyword_0_2_1_2_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPostfixExpRule());
	        }
       		setWithLastConsumed($current, "member", lv_member_10_4, null);
	    }

)

)
)))?)
    |
    { 
        newCompositeNode(grammarAccess.getPostfixExpAccess().getAtomicParserRuleCall_1()); 
    }
    this_Atomic_11=ruleAtomic
    { 
        $current = $this_Atomic_11.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAtomic
entryRuleAtomic returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtomicRule()); }
	 iv_ruleAtomic=ruleAtomic 
	 { $current=$iv_ruleAtomic.current; } 
	 EOF 
;

// Rule Atomic
ruleAtomic returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAtomicAccess().getConstructorAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicAccess().getTypeComplexTypeParserRuleCall_0_1_0()); 
	    }
		lv_type_1_0=ruleComplexType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"ComplexType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_0_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicAccess().getParamsExpParserRuleCall_0_3_0_0()); 
	    }
		lv_params_3_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAtomicAccess().getCommaKeyword_0_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicAccess().getParamsExpParserRuleCall_0_3_1_1_0()); 
	    }
		lv_params_5_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAtomicAccess().getRightParenthesisKeyword_0_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAtomicAccess().getIntegerLiteralAction_1_0(),
            $current);
    }
)(
(
		lv_value_8_0=RULE_INTCONSTANT
		{
			newLeafNode(lv_value_8_0, grammarAccess.getAtomicAccess().getValueINTCONSTANTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_8_0, 
        		"INTCONSTANT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAtomicAccess().getUIntegerLiteralAction_2_0(),
            $current);
    }
)(
(
		lv_value_10_0=RULE_UINTCONSTANT
		{
			newLeafNode(lv_value_10_0, grammarAccess.getAtomicAccess().getValueUINTCONSTANTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_10_0, 
        		"UINTCONSTANT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAtomicAccess().getFloatLiteralAction_3_0(),
            $current);
    }
)(
(
		lv_value_12_0=RULE_FLOATCONSTANT
		{
			newLeafNode(lv_value_12_0, grammarAccess.getAtomicAccess().getValueFLOATCONSTANTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_12_0, 
        		"FLOATCONSTANT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAtomicAccess().getBoolLiteralAction_4_0(),
            $current);
    }
)(
(
		lv_value_14_0=RULE_BOOLCONSTANT
		{
			newLeafNode(lv_value_14_0, grammarAccess.getAtomicAccess().getValueBOOLCONSTANTTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_14_0, 
        		"BOOLCONSTANT");
	    }

)
))
    |(	otherlv_15='(' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_5_0());
    }

    { 
        newCompositeNode(grammarAccess.getAtomicAccess().getExpParserRuleCall_5_1()); 
    }
    this_Exp_16=ruleExp
    { 
        $current = $this_Exp_16.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getAtomicAccess().getRightParenthesisKeyword_5_2());
    }
))
;







// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	 iv_ruleDefinition=ruleDefinition 
	 { $current=$iv_ruleDefinition.current; } 
	 EOF 
;

// Rule Definition
ruleDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_name_0_0, grammarAccess.getDefinitionAccess().getNameIDENTIFIERTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENTIFIER");
	    }

)
)(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefinitionAccess().getArgsDeclaredParameterParserRuleCall_1_1_0()); 
	    }
		lv_args_2_0=ruleDeclaredParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinitionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_2_0, 
        		"DeclaredParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDefinitionAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefinitionAccess().getArgsDeclaredParameterParserRuleCall_1_2_1_0()); 
	    }
		lv_args_4_0=ruleDeclaredParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinitionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_4_0, 
        		"DeclaredParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_1_3());
    }
)?)
;





// Entry rule entryRuleDeclaredParameter
entryRuleDeclaredParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclaredParameterRule()); }
	 iv_ruleDeclaredParameter=ruleDeclaredParameter 
	 { $current=$iv_ruleDeclaredParameter.current; } 
	 EOF 
;

// Rule DeclaredParameter
ruleDeclaredParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_name_0_0, grammarAccess.getDeclaredParameterAccess().getNameIDENTIFIERTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclaredParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENTIFIER");
	    }

)
)
;







// Rule LogicOp
ruleLogicOp returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='!=' 
	{
        $current = grammarAccess.getLogicOpAccess().getNOT_EQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getLogicOpAccess().getNOT_EQUALEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='==' 
	{
        $current = grammarAccess.getLogicOpAccess().getEQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getLogicOpAccess().getEQUALEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='<' 
	{
        $current = grammarAccess.getLogicOpAccess().getLESSEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getLogicOpAccess().getLESSEREnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='>' 
	{
        $current = grammarAccess.getLogicOpAccess().getGREATEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getLogicOpAccess().getGREATEREnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='<=' 
	{
        $current = grammarAccess.getLogicOpAccess().getLESSER_EQUALEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getLogicOpAccess().getLESSER_EQUALEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='>=' 
	{
        $current = grammarAccess.getLogicOpAccess().getGREATER_EQUALEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getLogicOpAccess().getGREATER_EQUALEnumLiteralDeclaration_5()); 
    }
));



RULE_ATTRIBUTE : 'attribute';

RULE_CONST : 'const';

RULE_BOOL : 'bool';

RULE_FLOAT : 'float';

RULE_INTX : 'int';

RULE_UINT : 'uint';

RULE_BREAK : 'break';

RULE_CONTINUE : 'continue';

RULE_DO : 'do';

RULE_ELSE : 'else';

RULE_FOR : 'for';

RULE_IF : 'if';

RULE_DISCARD : 'discard';

RULE_RETURN : 'return';

RULE_SWITCH : 'switch';

RULE_CASE : 'case';

RULE_DEFAULT : 'default';

RULE_BVEC2 : 'bvec2';

RULE_BVEC3 : 'bvec3';

RULE_BVEC4 : 'bvec4';

RULE_IVEC2 : 'ivec2';

RULE_IVEC3 : 'ivec3';

RULE_IVEC4 : 'ivec4';

RULE_UVEC2 : 'uvec2';

RULE_UVEC3 : 'uvec3';

RULE_UVEC4 : 'uvec4';

RULE_VEC2 : 'vec2';

RULE_VEC3 : 'vec3';

RULE_VEC4 : 'vec4';

RULE_MAT2 : 'mat2';

RULE_MAT3 : 'mat3';

RULE_MAT4 : 'mat4';

RULE_CENTROID : 'centroid';

RULE_IN : 'in';

RULE_OUT : 'out';

RULE_INOUT : 'inout';

RULE_UNIFORM : 'uniform';

RULE_VARYING : 'varying';

RULE_NOPERSPECTIVE : 'noperspective';

RULE_FLAT : 'flat';

RULE_SMOOTH : 'smooth';

RULE_LAYOUT : 'layout';

RULE_MAT2X2 : 'mat2x2';

RULE_MAT2X3 : 'mat2x3';

RULE_MAT2X4 : 'mat2x4';

RULE_MAT3X2 : 'mat3x2';

RULE_MAT3X3 : 'mat3x3';

RULE_MAT3X4 : 'mat3x4';

RULE_MAT4X2 : 'mat4x2';

RULE_MAT4X3 : 'mat4x3';

RULE_MAT4X4 : 'mat4x4';

RULE_STRUCT : 'struct';

RULE_VOID : 'void';

RULE_WHILE : 'while';

RULE_TYPE_NAME : 'WTF IS THIS?';

RULE_FLOATCONSTANT : ('0'..'9')* '.' ('0'..'9')+;

RULE_INTCONSTANT : ('0'..'9')+;

RULE_UINTCONSTANT : ('0'..'9')+ ('u'|'U');

RULE_BOOLCONSTANT : ('true'|'false');

RULE_FIELD_SELECTION : 'what is this?';

RULE_LEFT_OP : '<<';

RULE_RIGHT_OP : '>>';

RULE_INC_OP : '++';

RULE_DEC_OP : '--';

RULE_AND_OP : '&&';

RULE_OR_OP : '||';

RULE_XOR_OP : '^???';

RULE_MUL_ASSIGN : '*=';

RULE_DIV_ASSIGN : '/=';

RULE_ADD_ASSIGN : '+=';

RULE_MOD_ASSIGN : '%=';

RULE_LEFT_ASSIGN : '??';

RULE_RIGHT_ASSIGN : '??ASDF';

RULE_AND_ASSIGN : '&=';

RULE_XOR_ASSIGN : '^=';

RULE_OR_ASSIGN : '|=';

RULE_SUB_ASSIGN : '-=';

RULE_LEFT_BRACKET : '[';

RULE_RIGHT_BRACKET : ']';

RULE_LEFT_BRACE : '{';

RULE_RIGHT_BRACE : '}';

RULE_COLON : ':';

RULE_SEMICOLON : ';';

RULE_BANG : '!';

RULE_PLUS : '+';

RULE_DASH : '-';

RULE_TILDE : '~';

RULE_STAR : '*';

RULE_SLASH : '/';

RULE_PERCENT : '%';

RULE_VERTICAL_BAR : '|';

RULE_CARET : '^';

RULE_AMPERSAND : '&';

RULE_QUESTION : '?';

RULE_INVARIANT : 'invariant';

RULE_HIGH_PRECISION : 'high';

RULE_MEDIUM_PRECISION : 'medium';

RULE_LOW_PRECISION : 'low';

RULE_PRECISION : 'precision';

RULE_IDENTIFIER : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_PRECOMPILER_STATEMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_NL : '\r'? '\n';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


